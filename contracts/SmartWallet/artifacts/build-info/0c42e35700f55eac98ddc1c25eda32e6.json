{
	"id": "0c42e35700f55eac98ddc1c25eda32e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ETHBangkok/SmartWallet/SmartWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract SmartWallet {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public owner;\r\n    address public deployer;\r\n    IERC20 public greenToken;\r\n\r\n    event OwnerUpdated(address indexed newOwner);\r\n    event GreenTokenUpdated(address indexed newGreenToken);\r\n    event TokensWithdrawn(address indexed owner, uint256 amount);\r\n\r\n    modifier onlyDeployer() {\r\n        require(msg.sender == deployer, \"Only deployer can call this function\");\r\n        _; \r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _; \r\n    }\r\n\r\n    constructor(address _initialOwner, address _greenTokenAddress) {\r\n        require(_initialOwner != address(0), \"Owner cannot be the zero address\");\r\n        require(_greenTokenAddress != address(0), \"Green Token address cannot be the zero address\");\r\n\r\n        owner = _initialOwner;\r\n        deployer = msg.sender;\r\n        greenToken = IERC20(_greenTokenAddress);\r\n    }\r\n\r\n    function updateOwner(address newOwner) external onlyDeployer {\r\n        require(newOwner != address(0), \"New owner cannot be the zero address\");\r\n        owner = newOwner;\r\n        emit OwnerUpdated(newOwner);\r\n    }\r\n\r\n    function updateGreenTokenAddress(address newGreenToken) external onlyDeployer {\r\n        require(newGreenToken != address(0), \"Green Token address cannot be the zero address\");\r\n        greenToken = IERC20(newGreenToken);\r\n        emit GreenTokenUpdated(newGreenToken);\r\n    }\r\n\r\n    function verifyAndWithdraw() external onlyOwner {\r\n        uint256 balance = greenToken.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens to withdraw\");\r\n\r\n        greenToken.safeTransfer(owner, balance);\r\n        emit TokensWithdrawn(owner, balance);\r\n    }\r\n\r\n    function getGreenTokenBalance() external view returns (uint256) {\r\n        return greenToken.balanceOf(address(this));\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    fallback() external payable {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ETHBangkok/SmartWallet/SmartWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ETHBangkok/SmartWallet/SmartWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ETHBangkok/SmartWallet/SmartWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ETHBangkok/SmartWallet/SmartWallet.sol": {
				"SmartWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_greenTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGreenToken",
									"type": "address"
								}
							],
							"name": "GreenTokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "deployer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGreenTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "greenToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newGreenToken",
									"type": "address"
								}
							],
							"name": "updateGreenTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "updateOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verifyAndWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":188:2157  contract SmartWallet {... */\n  mstore(0x40, 0x80)\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":783:1155  constructor(address _initialOwner, address _greenTokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":890:891  0 */\n  0x00\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":865:892  _initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":865:878  _initialOwner */\n  dup3\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":865:892  _initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":857:929  require(_initialOwner != address(0), \"Owner cannot be the zero address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":978:979  0 */\n  0x00\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":948:980  _greenTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":948:966  _greenTokenAddress */\n  dup2\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":948:980  _greenTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":940:1031  require(_greenTokenAddress != address(0), \"Green Token address cannot be the zero address\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1052:1065  _initialOwner */\n  dup2\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1044:1049  owner */\n  0x00\n  dup1\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1044:1065  owner = _initialOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1087:1097  msg.sender */\n  caller\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1076:1084  deployer */\n  0x01\n  0x00\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1076:1097  deployer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1128:1146  _greenTokenAddress */\n  dup1\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1108:1118  greenToken */\n  0x02\n  0x00\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1108:1147  greenToken = IERC20(_greenTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":783:1155  constructor(address _initialOwner, address _greenTokenAddress) {... */\n  pop\n  pop\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":188:2157  contract SmartWallet {... */\n  jump(tag_12)\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_16:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_17:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_16\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_18:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_17\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_19:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_18\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1527   */\ntag_20:\n    /* \"#utility.yul\":1442:1453   */\n  0x00\n    /* \"#utility.yul\":1476:1482   */\n  dup3\n    /* \"#utility.yul\":1471:1474   */\n  dup3\n    /* \"#utility.yul\":1464:1483   */\n  mstore\n    /* \"#utility.yul\":1516:1520   */\n  0x20\n    /* \"#utility.yul\":1511:1514   */\n  dup3\n    /* \"#utility.yul\":1507:1521   */\n  add\n    /* \"#utility.yul\":1492:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1715   */\ntag_21:\n    /* \"#utility.yul\":1673:1707   */\n  0x4f776e65722063616e6e6f7420626520746865207a65726f2061646472657373\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1661:1667   */\n  dup3\n    /* \"#utility.yul\":1657:1671   */\n  add\n    /* \"#utility.yul\":1650:1708   */\n  mstore\n    /* \"#utility.yul\":1533:1715   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1721:2087   */\ntag_22:\n    /* \"#utility.yul\":1863:1866   */\n  0x00\n    /* \"#utility.yul\":1884:1951   */\n  tag_45\n    /* \"#utility.yul\":1948:1950   */\n  0x20\n    /* \"#utility.yul\":1943:1946   */\n  dup4\n    /* \"#utility.yul\":1884:1951   */\n  tag_20\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1877:1951   */\n  swap2\n  pop\n    /* \"#utility.yul\":1960:2053   */\n  tag_46\n    /* \"#utility.yul\":2049:2052   */\n  dup3\n    /* \"#utility.yul\":1960:2053   */\n  tag_21\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2078:2080   */\n  0x20\n    /* \"#utility.yul\":2073:2076   */\n  dup3\n    /* \"#utility.yul\":2069:2081   */\n  add\n    /* \"#utility.yul\":2062:2081   */\n  swap1\n  pop\n    /* \"#utility.yul\":1721:2087   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2093:2512   */\ntag_8:\n    /* \"#utility.yul\":2259:2263   */\n  0x00\n    /* \"#utility.yul\":2297:2299   */\n  0x20\n    /* \"#utility.yul\":2286:2295   */\n  dup3\n    /* \"#utility.yul\":2282:2300   */\n  add\n    /* \"#utility.yul\":2274:2300   */\n  swap1\n  pop\n    /* \"#utility.yul\":2346:2355   */\n  dup2\n    /* \"#utility.yul\":2340:2344   */\n  dup2\n    /* \"#utility.yul\":2336:2356   */\n  sub\n    /* \"#utility.yul\":2332:2333   */\n  0x00\n    /* \"#utility.yul\":2321:2330   */\n  dup4\n    /* \"#utility.yul\":2317:2334   */\n  add\n    /* \"#utility.yul\":2310:2357   */\n  mstore\n    /* \"#utility.yul\":2374:2505   */\n  tag_48\n    /* \"#utility.yul\":2500:2504   */\n  dup2\n    /* \"#utility.yul\":2374:2505   */\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2366:2505   */\n  swap1\n  pop\n    /* \"#utility.yul\":2093:2512   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2518:2751   */\ntag_23:\n    /* \"#utility.yul\":2658:2692   */\n  0x477265656e20546f6b656e20616464726573732063616e6e6f74206265207468\n    /* \"#utility.yul\":2654:2655   */\n  0x00\n    /* \"#utility.yul\":2646:2652   */\n  dup3\n    /* \"#utility.yul\":2642:2656   */\n  add\n    /* \"#utility.yul\":2635:2693   */\n  mstore\n    /* \"#utility.yul\":2727:2743   */\n  0x65207a65726f2061646472657373000000000000000000000000000000000000\n    /* \"#utility.yul\":2722:2724   */\n  0x20\n    /* \"#utility.yul\":2714:2720   */\n  dup3\n    /* \"#utility.yul\":2710:2725   */\n  add\n    /* \"#utility.yul\":2703:2744   */\n  mstore\n    /* \"#utility.yul\":2518:2751   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2757:3123   */\ntag_24:\n    /* \"#utility.yul\":2899:2902   */\n  0x00\n    /* \"#utility.yul\":2920:2987   */\n  tag_51\n    /* \"#utility.yul\":2984:2986   */\n  0x2e\n    /* \"#utility.yul\":2979:2982   */\n  dup4\n    /* \"#utility.yul\":2920:2987   */\n  tag_20\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2913:2987   */\n  swap2\n  pop\n    /* \"#utility.yul\":2996:3089   */\n  tag_52\n    /* \"#utility.yul\":3085:3088   */\n  dup3\n    /* \"#utility.yul\":2996:3089   */\n  tag_23\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3114:3116   */\n  0x40\n    /* \"#utility.yul\":3109:3112   */\n  dup3\n    /* \"#utility.yul\":3105:3117   */\n  add\n    /* \"#utility.yul\":3098:3117   */\n  swap1\n  pop\n    /* \"#utility.yul\":2757:3123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3129:3548   */\ntag_11:\n    /* \"#utility.yul\":3295:3299   */\n  0x00\n    /* \"#utility.yul\":3333:3335   */\n  0x20\n    /* \"#utility.yul\":3322:3331   */\n  dup3\n    /* \"#utility.yul\":3318:3336   */\n  add\n    /* \"#utility.yul\":3310:3336   */\n  swap1\n  pop\n    /* \"#utility.yul\":3382:3391   */\n  dup2\n    /* \"#utility.yul\":3376:3380   */\n  dup2\n    /* \"#utility.yul\":3372:3392   */\n  sub\n    /* \"#utility.yul\":3368:3369   */\n  0x00\n    /* \"#utility.yul\":3357:3366   */\n  dup4\n    /* \"#utility.yul\":3353:3370   */\n  add\n    /* \"#utility.yul\":3346:3393   */\n  mstore\n    /* \"#utility.yul\":3410:3541   */\n  tag_54\n    /* \"#utility.yul\":3536:3540   */\n  dup2\n    /* \"#utility.yul\":3410:3541   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3402:3541   */\n  swap1\n  pop\n    /* \"#utility.yul\":3129:3548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":188:2157  contract SmartWallet {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":188:2157  contract SmartWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x99e9c1dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd5f39488\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea017105\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x02b32af5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f31dc01\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x880cdc31\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":308:332  IERC20 public greenToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1387:1663  function updateGreenTokenAddress(address newGreenToken) external onlyDeployer {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1163:1379  function updateOwner(address newOwner) external onlyDeployer {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":251:271  address public owner */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1954:2079  function getGreenTokenBalance() external view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":278:301  address public deployer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1671:1946  function verifyAndWithdraw() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":308:332  IERC20 public greenToken */\n    tag_17:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1387:1663  function updateGreenTokenAddress(address newGreenToken) external onlyDeployer {... */\n    tag_24:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":579:587  deployer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:587  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:575  msg.sender */\n      caller\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:587  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":557:628  require(msg.sender == deployer, \"Only deployer can call this function\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1509:1510  0 */\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1484:1511  newGreenToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1484:1497  newGreenToken */\n      dup2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1484:1511  newGreenToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1476:1562  require(newGreenToken != address(0), \"Green Token address cannot be the zero address\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1593:1606  newGreenToken */\n      dup1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1573:1583  greenToken */\n      0x02\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1573:1607  greenToken = IERC20(newGreenToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1641:1654  newGreenToken */\n      dup1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1623:1655  GreenTokenUpdated(newGreenToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x55b6b6fe98d11600785423c3f7630dee64b0f6fa54e8a25362aa522d83dfd243\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1387:1663  function updateGreenTokenAddress(address newGreenToken) external onlyDeployer {... */\n      pop\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1163:1379  function updateOwner(address newOwner) external onlyDeployer {... */\n    tag_28:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":579:587  deployer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:587  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:575  msg.sender */\n      caller\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":565:587  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":557:628  require(msg.sender == deployer, \"Only deployer can call this function\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1263:1264  0 */\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1243:1265  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1243:1251  newOwner */\n      dup2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1243:1265  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1235:1306  require(newOwner != address(0), \"New owner cannot be the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1325:1333  newOwner */\n      dup1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1317:1322  owner */\n      0x00\n      dup1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1317:1333  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1362:1370  newOwner */\n      dup1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1349:1371  OwnerUpdated(newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1163:1379  function updateOwner(address newOwner) external onlyDeployer {... */\n      pop\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":251:271  address public owner */\n    tag_31:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1954:2079  function getGreenTokenBalance() external view returns (uint256) {... */\n    tag_36:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2009:2016  uint256 */\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2036:2046  greenToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2036:2056  greenToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2065:2069  this */\n      address\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2036:2071  greenToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":2029:2071  return greenToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1954:2079  function getGreenTokenBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":278:301  address public deployer */\n    tag_41:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1671:1946  function verifyAndWithdraw() external onlyOwner {... */\n    tag_45:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":711:716  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":697:716  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":697:707  msg.sender */\n      caller\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":697:716  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":689:754  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1730:1745  uint256 balance */\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1748:1758  greenToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1748:1768  greenToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1777:1781  this */\n      address\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1748:1783  greenToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_75:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1730:1783  uint256 balance = greenToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1812:1813  0 */\n      0x00\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1802:1809  balance */\n      dup2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1802:1813  balance > 0 */\n      gt\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1794:1839  require(balance > 0, \"No tokens to withdraw\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1852:1891  greenToken.safeTransfer(owner, balance) */\n      tag_79\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1876:1881  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1883:1890  balance */\n      dup3\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1852:1862  greenToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1852:1875  greenToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_80\n      swap1\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1852:1891  greenToken.safeTransfer(owner, balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1923:1928  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1907:1938  TokensWithdrawn(owner, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1930:1937  balance */\n      dup3\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1907:1938  TokensWithdrawn(owner, balance) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1719:1946  {... */\n      pop\n        /* \"ETHBangkok/SmartWallet/SmartWallet.sol\":1671:1946  function verifyAndWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_90)\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_93:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_94:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_95:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_125\n        /* \"#utility.yul\":306:340   */\n      tag_126\n        /* \"#utility.yul\":315:339   */\n      tag_127\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":306:340   */\n      tag_94\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":288:341   */\n      tag_93\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_96:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_129\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_95\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_97:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_131\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_96\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_98:\n        /* \"#utility.yul\":732:783   */\n      tag_133\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_97\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_19:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_135\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_98\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_100:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1475   */\n    tag_102:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1469   */\n      tag_140\n        /* \"#utility.yul\":1463:1468   */\n      dup3\n        /* \"#utility.yul\":1445:1469   */\n      tag_93\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1434:1469   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1481:1603   */\n    tag_103:\n        /* \"#utility.yul\":1554:1578   */\n      tag_142\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1554:1578   */\n      tag_102\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1547:1552   */\n      dup2\n        /* \"#utility.yul\":1544:1579   */\n      eq\n        /* \"#utility.yul\":1534:1597   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1593:1594   */\n      0x00\n        /* \"#utility.yul\":1590:1591   */\n      dup1\n        /* \"#utility.yul\":1583:1595   */\n      revert\n        /* \"#utility.yul\":1534:1597   */\n    tag_143:\n        /* \"#utility.yul\":1481:1603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1609:1748   */\n    tag_104:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1693:1699   */\n      dup2\n        /* \"#utility.yul\":1680:1700   */\n      calldataload\n        /* \"#utility.yul\":1671:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1742   */\n      tag_145\n        /* \"#utility.yul\":1736:1741   */\n      dup2\n        /* \"#utility.yul\":1709:1742   */\n      tag_103\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1609:1748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:2083   */\n    tag_23:\n        /* \"#utility.yul\":1813:1819   */\n      0x00\n        /* \"#utility.yul\":1862:1864   */\n      0x20\n        /* \"#utility.yul\":1850:1859   */\n      dup3\n        /* \"#utility.yul\":1841:1848   */\n      dup5\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_148\n      tag_100\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1830:1949   */\n    tag_147:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_149\n        /* \"#utility.yul\":2058:2065   */\n      dup5\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup6\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_104\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2003:2066   */\n      swap2\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":1754:2083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2089:2207   */\n    tag_105:\n        /* \"#utility.yul\":2176:2200   */\n      tag_151\n        /* \"#utility.yul\":2194:2199   */\n      dup2\n        /* \"#utility.yul\":2176:2200   */\n      tag_102\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2164:2201   */\n      mstore\n        /* \"#utility.yul\":2089:2207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2213:2435   */\n    tag_33:\n        /* \"#utility.yul\":2306:2310   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2333:2342   */\n      dup3\n        /* \"#utility.yul\":2329:2347   */\n      add\n        /* \"#utility.yul\":2321:2347   */\n      swap1\n      pop\n        /* \"#utility.yul\":2357:2428   */\n      tag_153\n        /* \"#utility.yul\":2425:2426   */\n      0x00\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2410:2427   */\n      add\n        /* \"#utility.yul\":2401:2407   */\n      dup5\n        /* \"#utility.yul\":2357:2428   */\n      tag_105\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2213:2435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2441:2518   */\n    tag_106:\n        /* \"#utility.yul\":2478:2485   */\n      0x00\n        /* \"#utility.yul\":2507:2512   */\n      dup2\n        /* \"#utility.yul\":2496:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2441:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_107:\n        /* \"#utility.yul\":2611:2635   */\n      tag_156\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_106\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_38:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_158\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_107\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3045   */\n    tag_108:\n        /* \"#utility.yul\":2960:2971   */\n      0x00\n        /* \"#utility.yul\":2994:3000   */\n      dup3\n        /* \"#utility.yul\":2989:2992   */\n      dup3\n        /* \"#utility.yul\":2982:3001   */\n      mstore\n        /* \"#utility.yul\":3034:3038   */\n      0x20\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3025:3039   */\n      add\n        /* \"#utility.yul\":3010:3039   */\n      swap1\n      pop\n        /* \"#utility.yul\":2876:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3274   */\n    tag_109:\n        /* \"#utility.yul\":3191:3225   */\n      0x4f6e6c79206465706c6f7965722063616e2063616c6c20746869732066756e63\n        /* \"#utility.yul\":3187:3188   */\n      0x00\n        /* \"#utility.yul\":3179:3185   */\n      dup3\n        /* \"#utility.yul\":3175:3189   */\n      add\n        /* \"#utility.yul\":3168:3226   */\n      mstore\n        /* \"#utility.yul\":3260:3266   */\n      0x74696f6e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"#utility.yul\":3247:3253   */\n      dup3\n        /* \"#utility.yul\":3243:3258   */\n      add\n        /* \"#utility.yul\":3236:3267   */\n      mstore\n        /* \"#utility.yul\":3051:3274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3280:3646   */\n    tag_110:\n        /* \"#utility.yul\":3422:3425   */\n      0x00\n        /* \"#utility.yul\":3443:3510   */\n      tag_162\n        /* \"#utility.yul\":3507:3509   */\n      0x24\n        /* \"#utility.yul\":3502:3505   */\n      dup4\n        /* \"#utility.yul\":3443:3510   */\n      tag_108\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3436:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3519:3612   */\n      tag_163\n        /* \"#utility.yul\":3608:3611   */\n      dup3\n        /* \"#utility.yul\":3519:3612   */\n      tag_109\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3637:3639   */\n      0x40\n        /* \"#utility.yul\":3632:3635   */\n      dup3\n        /* \"#utility.yul\":3628:3640   */\n      add\n        /* \"#utility.yul\":3621:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3280:3646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3652:4071   */\n    tag_49:\n        /* \"#utility.yul\":3818:3822   */\n      0x00\n        /* \"#utility.yul\":3856:3858   */\n      0x20\n        /* \"#utility.yul\":3845:3854   */\n      dup3\n        /* \"#utility.yul\":3841:3859   */\n      add\n        /* \"#utility.yul\":3833:3859   */\n      swap1\n      pop\n        /* \"#utility.yul\":3905:3914   */\n      dup2\n        /* \"#utility.yul\":3899:3903   */\n      dup2\n        /* \"#utility.yul\":3895:3915   */\n      sub\n        /* \"#utility.yul\":3891:3892   */\n      0x00\n        /* \"#utility.yul\":3880:3889   */\n      dup4\n        /* \"#utility.yul\":3876:3893   */\n      add\n        /* \"#utility.yul\":3869:3916   */\n      mstore\n        /* \"#utility.yul\":3933:4064   */\n      tag_165\n        /* \"#utility.yul\":4059:4063   */\n      dup2\n        /* \"#utility.yul\":3933:4064   */\n      tag_110\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3925:4064   */\n      swap1\n      pop\n        /* \"#utility.yul\":3652:4071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4077:4310   */\n    tag_111:\n        /* \"#utility.yul\":4217:4251   */\n      0x477265656e20546f6b656e20616464726573732063616e6e6f74206265207468\n        /* \"#utility.yul\":4213:4214   */\n      0x00\n        /* \"#utility.yul\":4205:4211   */\n      dup3\n        /* \"#utility.yul\":4201:4215   */\n      add\n        /* \"#utility.yul\":4194:4252   */\n      mstore\n        /* \"#utility.yul\":4286:4302   */\n      0x65207a65726f2061646472657373000000000000000000000000000000000000\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4273:4279   */\n      dup3\n        /* \"#utility.yul\":4269:4284   */\n      add\n        /* \"#utility.yul\":4262:4303   */\n      mstore\n        /* \"#utility.yul\":4077:4310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4682   */\n    tag_112:\n        /* \"#utility.yul\":4458:4461   */\n      0x00\n        /* \"#utility.yul\":4479:4546   */\n      tag_168\n        /* \"#utility.yul\":4543:4545   */\n      0x2e\n        /* \"#utility.yul\":4538:4541   */\n      dup4\n        /* \"#utility.yul\":4479:4546   */\n      tag_108\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4472:4546   */\n      swap2\n      pop\n        /* \"#utility.yul\":4555:4648   */\n      tag_169\n        /* \"#utility.yul\":4644:4647   */\n      dup3\n        /* \"#utility.yul\":4555:4648   */\n      tag_111\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4673:4675   */\n      0x40\n        /* \"#utility.yul\":4668:4671   */\n      dup3\n        /* \"#utility.yul\":4664:4676   */\n      add\n        /* \"#utility.yul\":4657:4676   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:5107   */\n    tag_53:\n        /* \"#utility.yul\":4854:4858   */\n      0x00\n        /* \"#utility.yul\":4892:4894   */\n      0x20\n        /* \"#utility.yul\":4881:4890   */\n      dup3\n        /* \"#utility.yul\":4877:4895   */\n      add\n        /* \"#utility.yul\":4869:4895   */\n      swap1\n      pop\n        /* \"#utility.yul\":4941:4950   */\n      dup2\n        /* \"#utility.yul\":4935:4939   */\n      dup2\n        /* \"#utility.yul\":4931:4951   */\n      sub\n        /* \"#utility.yul\":4927:4928   */\n      0x00\n        /* \"#utility.yul\":4916:4925   */\n      dup4\n        /* \"#utility.yul\":4912:4929   */\n      add\n        /* \"#utility.yul\":4905:4952   */\n      mstore\n        /* \"#utility.yul\":4969:5100   */\n      tag_171\n        /* \"#utility.yul\":5095:5099   */\n      dup2\n        /* \"#utility.yul\":4969:5100   */\n      tag_112\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4961:5100   */\n      swap1\n      pop\n        /* \"#utility.yul\":4688:5107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5113:5336   */\n    tag_113:\n        /* \"#utility.yul\":5253:5287   */\n      0x4e6577206f776e65722063616e6e6f7420626520746865207a65726f20616464\n        /* \"#utility.yul\":5249:5250   */\n      0x00\n        /* \"#utility.yul\":5241:5247   */\n      dup3\n        /* \"#utility.yul\":5237:5251   */\n      add\n        /* \"#utility.yul\":5230:5288   */\n      mstore\n        /* \"#utility.yul\":5322:5328   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5317:5319   */\n      0x20\n        /* \"#utility.yul\":5309:5315   */\n      dup3\n        /* \"#utility.yul\":5305:5320   */\n      add\n        /* \"#utility.yul\":5298:5329   */\n      mstore\n        /* \"#utility.yul\":5113:5336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:5708   */\n    tag_114:\n        /* \"#utility.yul\":5484:5487   */\n      0x00\n        /* \"#utility.yul\":5505:5572   */\n      tag_174\n        /* \"#utility.yul\":5569:5571   */\n      0x24\n        /* \"#utility.yul\":5564:5567   */\n      dup4\n        /* \"#utility.yul\":5505:5572   */\n      tag_108\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5498:5572   */\n      swap2\n      pop\n        /* \"#utility.yul\":5581:5674   */\n      tag_175\n        /* \"#utility.yul\":5670:5673   */\n      dup3\n        /* \"#utility.yul\":5581:5674   */\n      tag_113\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5699:5701   */\n      0x40\n        /* \"#utility.yul\":5694:5697   */\n      dup3\n        /* \"#utility.yul\":5690:5702   */\n      add\n        /* \"#utility.yul\":5683:5702   */\n      swap1\n      pop\n        /* \"#utility.yul\":5342:5708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5714:6133   */\n    tag_60:\n        /* \"#utility.yul\":5880:5884   */\n      0x00\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5907:5916   */\n      dup3\n        /* \"#utility.yul\":5903:5921   */\n      add\n        /* \"#utility.yul\":5895:5921   */\n      swap1\n      pop\n        /* \"#utility.yul\":5967:5976   */\n      dup2\n        /* \"#utility.yul\":5961:5965   */\n      dup2\n        /* \"#utility.yul\":5957:5977   */\n      sub\n        /* \"#utility.yul\":5953:5954   */\n      0x00\n        /* \"#utility.yul\":5942:5951   */\n      dup4\n        /* \"#utility.yul\":5938:5955   */\n      add\n        /* \"#utility.yul\":5931:5978   */\n      mstore\n        /* \"#utility.yul\":5995:6126   */\n      tag_177\n        /* \"#utility.yul\":6121:6125   */\n      dup2\n        /* \"#utility.yul\":5995:6126   */\n      tag_114\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5987:6126   */\n      swap1\n      pop\n        /* \"#utility.yul\":5714:6133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6139:6261   */\n    tag_115:\n        /* \"#utility.yul\":6212:6236   */\n      tag_179\n        /* \"#utility.yul\":6230:6235   */\n      dup2\n        /* \"#utility.yul\":6212:6236   */\n      tag_106\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6205:6210   */\n      dup2\n        /* \"#utility.yul\":6202:6237   */\n      eq\n        /* \"#utility.yul\":6192:6255   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":6251:6252   */\n      0x00\n        /* \"#utility.yul\":6248:6249   */\n      dup1\n        /* \"#utility.yul\":6241:6253   */\n      revert\n        /* \"#utility.yul\":6192:6255   */\n    tag_180:\n        /* \"#utility.yul\":6139:6261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6267:6410   */\n    tag_116:\n        /* \"#utility.yul\":6324:6329   */\n      0x00\n        /* \"#utility.yul\":6355:6361   */\n      dup2\n        /* \"#utility.yul\":6349:6362   */\n      mload\n        /* \"#utility.yul\":6340:6362   */\n      swap1\n      pop\n        /* \"#utility.yul\":6371:6404   */\n      tag_182\n        /* \"#utility.yul\":6398:6403   */\n      dup2\n        /* \"#utility.yul\":6371:6404   */\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6267:6410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6416:6767   */\n    tag_66:\n        /* \"#utility.yul\":6486:6492   */\n      0x00\n        /* \"#utility.yul\":6535:6537   */\n      0x20\n        /* \"#utility.yul\":6523:6532   */\n      dup3\n        /* \"#utility.yul\":6514:6521   */\n      dup5\n        /* \"#utility.yul\":6510:6533   */\n      sub\n        /* \"#utility.yul\":6506:6538   */\n      slt\n        /* \"#utility.yul\":6503:6622   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":6541:6620   */\n      tag_185\n      tag_100\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6503:6622   */\n    tag_184:\n        /* \"#utility.yul\":6661:6662   */\n      0x00\n        /* \"#utility.yul\":6686:6750   */\n      tag_186\n        /* \"#utility.yul\":6742:6749   */\n      dup5\n        /* \"#utility.yul\":6733:6739   */\n      dup3\n        /* \"#utility.yul\":6722:6731   */\n      dup6\n        /* \"#utility.yul\":6718:6740   */\n      add\n        /* \"#utility.yul\":6686:6750   */\n      tag_116\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6676:6750   */\n      swap2\n      pop\n        /* \"#utility.yul\":6632:6760   */\n      pop\n        /* \"#utility.yul\":6416:6767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6773:6993   */\n    tag_117:\n        /* \"#utility.yul\":6913:6947   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":6909:6910   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup3\n        /* \"#utility.yul\":6897:6911   */\n      add\n        /* \"#utility.yul\":6890:6948   */\n      mstore\n        /* \"#utility.yul\":6982:6985   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6977:6979   */\n      0x20\n        /* \"#utility.yul\":6969:6975   */\n      dup3\n        /* \"#utility.yul\":6965:6980   */\n      add\n        /* \"#utility.yul\":6958:6986   */\n      mstore\n        /* \"#utility.yul\":6773:6993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6999:7365   */\n    tag_118:\n        /* \"#utility.yul\":7141:7144   */\n      0x00\n        /* \"#utility.yul\":7162:7229   */\n      tag_189\n        /* \"#utility.yul\":7226:7228   */\n      0x21\n        /* \"#utility.yul\":7221:7224   */\n      dup4\n        /* \"#utility.yul\":7162:7229   */\n      tag_108\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":7155:7229   */\n      swap2\n      pop\n        /* \"#utility.yul\":7238:7331   */\n      tag_190\n        /* \"#utility.yul\":7327:7330   */\n      dup3\n        /* \"#utility.yul\":7238:7331   */\n      tag_117\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7356:7358   */\n      0x40\n        /* \"#utility.yul\":7351:7354   */\n      dup3\n        /* \"#utility.yul\":7347:7359   */\n      add\n        /* \"#utility.yul\":7340:7359   */\n      swap1\n      pop\n        /* \"#utility.yul\":6999:7365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7371:7790   */\n    tag_70:\n        /* \"#utility.yul\":7537:7541   */\n      0x00\n        /* \"#utility.yul\":7575:7577   */\n      0x20\n        /* \"#utility.yul\":7564:7573   */\n      dup3\n        /* \"#utility.yul\":7560:7578   */\n      add\n        /* \"#utility.yul\":7552:7578   */\n      swap1\n      pop\n        /* \"#utility.yul\":7624:7633   */\n      dup2\n        /* \"#utility.yul\":7618:7622   */\n      dup2\n        /* \"#utility.yul\":7614:7634   */\n      sub\n        /* \"#utility.yul\":7610:7611   */\n      0x00\n        /* \"#utility.yul\":7599:7608   */\n      dup4\n        /* \"#utility.yul\":7595:7612   */\n      add\n        /* \"#utility.yul\":7588:7635   */\n      mstore\n        /* \"#utility.yul\":7652:7783   */\n      tag_192\n        /* \"#utility.yul\":7778:7782   */\n      dup2\n        /* \"#utility.yul\":7652:7783   */\n      tag_118\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7644:7783   */\n      swap1\n      pop\n        /* \"#utility.yul\":7371:7790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7796:7967   */\n    tag_119:\n        /* \"#utility.yul\":7936:7959   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":7932:7933   */\n      0x00\n        /* \"#utility.yul\":7924:7930   */\n      dup3\n        /* \"#utility.yul\":7920:7934   */\n      add\n        /* \"#utility.yul\":7913:7960   */\n      mstore\n        /* \"#utility.yul\":7796:7967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8339   */\n    tag_120:\n        /* \"#utility.yul\":8115:8118   */\n      0x00\n        /* \"#utility.yul\":8136:8203   */\n      tag_195\n        /* \"#utility.yul\":8200:8202   */\n      0x15\n        /* \"#utility.yul\":8195:8198   */\n      dup4\n        /* \"#utility.yul\":8136:8203   */\n      tag_108\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8129:8203   */\n      swap2\n      pop\n        /* \"#utility.yul\":8212:8305   */\n      tag_196\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8212:8305   */\n      tag_119\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8330:8332   */\n      0x20\n        /* \"#utility.yul\":8325:8328   */\n      dup3\n        /* \"#utility.yul\":8321:8333   */\n      add\n        /* \"#utility.yul\":8314:8333   */\n      swap1\n      pop\n        /* \"#utility.yul\":7973:8339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8345:8764   */\n    tag_78:\n        /* \"#utility.yul\":8511:8515   */\n      0x00\n        /* \"#utility.yul\":8549:8551   */\n      0x20\n        /* \"#utility.yul\":8538:8547   */\n      dup3\n        /* \"#utility.yul\":8534:8552   */\n      add\n        /* \"#utility.yul\":8526:8552   */\n      swap1\n      pop\n        /* \"#utility.yul\":8598:8607   */\n      dup2\n        /* \"#utility.yul\":8592:8596   */\n      dup2\n        /* \"#utility.yul\":8588:8608   */\n      sub\n        /* \"#utility.yul\":8584:8585   */\n      0x00\n        /* \"#utility.yul\":8573:8582   */\n      dup4\n        /* \"#utility.yul\":8569:8586   */\n      add\n        /* \"#utility.yul\":8562:8609   */\n      mstore\n        /* \"#utility.yul\":8626:8757   */\n      tag_198\n        /* \"#utility.yul\":8752:8756   */\n      dup2\n        /* \"#utility.yul\":8626:8757   */\n      tag_120\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8618:8757   */\n      swap1\n      pop\n        /* \"#utility.yul\":8345:8764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8770:9102   */\n    tag_85:\n        /* \"#utility.yul\":8891:8895   */\n      0x00\n        /* \"#utility.yul\":8929:8931   */\n      0x40\n        /* \"#utility.yul\":8918:8927   */\n      dup3\n        /* \"#utility.yul\":8914:8932   */\n      add\n        /* \"#utility.yul\":8906:8932   */\n      swap1\n      pop\n        /* \"#utility.yul\":8942:9013   */\n      tag_200\n        /* \"#utility.yul\":9010:9011   */\n      0x00\n        /* \"#utility.yul\":8999:9008   */\n      dup4\n        /* \"#utility.yul\":8995:9012   */\n      add\n        /* \"#utility.yul\":8986:8992   */\n      dup6\n        /* \"#utility.yul\":8942:9013   */\n      tag_105\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9023:9095   */\n      tag_201\n        /* \"#utility.yul\":9091:9093   */\n      0x20\n        /* \"#utility.yul\":9080:9089   */\n      dup4\n        /* \"#utility.yul\":9076:9094   */\n      add\n        /* \"#utility.yul\":9067:9073   */\n      dup5\n        /* \"#utility.yul\":9023:9095   */\n      tag_107\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8770:9102   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c02d03b12c5f3beb48621faac0b8472b5996bf528cd5abf1212ab6fce51371a264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_967": {
									"entryPoint": null,
									"id": 967,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3551:9",
										"nodeType": "YulBlock",
										"src": "0:3551:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "939:413:9",
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:9",
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nativeSrc": "987:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nativeSrc": "987:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nativeSrc": "956:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nativeSrc": "952:32:9",
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nativeSrc": "949:119:9",
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nativeSrc": "1078:128:9",
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nativeSrc": "1093:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nativeSrc": "1164:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nativeSrc": "1132:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:9",
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nativeSrc": "1231:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nativeSrc": "1303:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nativeSrc": "1271:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:9",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:9",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:9",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:9",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											},
											{
												"body": {
													"nativeSrc": "1454:73:9",
													"nodeType": "YulBlock",
													"src": "1454:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:9"
																},
																"nativeSrc": "1464:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1464:19:9"
															},
															"nativeSrc": "1464:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1464:19:9"
														},
														{
															"nativeSrc": "1492:29:9",
															"nodeType": "YulAssignment",
															"src": "1492:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1511:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1511:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1516:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:9"
																},
																"nativeSrc": "1507:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1507:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1492:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1492:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1358:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1426:3:9",
														"nodeType": "YulTypedName",
														"src": "1426:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1431:6:9",
														"nodeType": "YulTypedName",
														"src": "1431:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1442:11:9",
														"nodeType": "YulTypedName",
														"src": "1442:11:9",
														"type": ""
													}
												],
												"src": "1358:169:9"
											},
											{
												"body": {
													"nativeSrc": "1639:76:9",
													"nodeType": "YulBlock",
													"src": "1639:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1661:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1669:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1669:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:9"
																		},
																		"nativeSrc": "1657:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:14:9"
																	},
																	{
																		"hexValue": "4f776e65722063616e6e6f7420626520746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1673:34:9",
																		"nodeType": "YulLiteral",
																		"src": "1673:34:9",
																		"type": "",
																		"value": "Owner cannot be the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1650:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:9"
																},
																"nativeSrc": "1650:58:9",
																"nodeType": "YulFunctionCall",
																"src": "1650:58:9"
															},
															"nativeSrc": "1650:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "1650:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850",
												"nativeSrc": "1533:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1631:6:9",
														"nodeType": "YulTypedName",
														"src": "1631:6:9",
														"type": ""
													}
												],
												"src": "1533:182:9"
											},
											{
												"body": {
													"nativeSrc": "1867:220:9",
													"nodeType": "YulBlock",
													"src": "1867:220:9",
													"statements": [
														{
															"nativeSrc": "1877:74:9",
															"nodeType": "YulAssignment",
															"src": "1877:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1943:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1943:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1948:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1948:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1884:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1884:58:9"
																},
																"nativeSrc": "1884:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1884:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2049:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850",
																	"nativeSrc": "1960:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "1960:88:9"
																},
																"nativeSrc": "1960:93:9",
																"nodeType": "YulFunctionCall",
																"src": "1960:93:9"
															},
															"nativeSrc": "1960:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "1960:93:9"
														},
														{
															"nativeSrc": "2062:19:9",
															"nodeType": "YulAssignment",
															"src": "2062:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2073:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2073:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2078:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2078:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2069:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:9"
																},
																"nativeSrc": "2069:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2069:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2062:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1721:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1855:3:9",
														"nodeType": "YulTypedName",
														"src": "1855:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1863:3:9",
														"nodeType": "YulTypedName",
														"src": "1863:3:9",
														"type": ""
													}
												],
												"src": "1721:366:9"
											},
											{
												"body": {
													"nativeSrc": "2264:248:9",
													"nodeType": "YulBlock",
													"src": "2264:248:9",
													"statements": [
														{
															"nativeSrc": "2274:26:9",
															"nodeType": "YulAssignment",
															"src": "2274:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2286:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2286:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2297:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2282:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:9"
																},
																"nativeSrc": "2282:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2282:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2274:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2274:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2321:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2332:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2332:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2317:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:9"
																		},
																		"nativeSrc": "2317:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2317:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2340:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2340:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2346:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2346:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2336:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:9"
																		},
																		"nativeSrc": "2336:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:9"
																},
																"nativeSrc": "2310:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2310:47:9"
															},
															"nativeSrc": "2310:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2310:47:9"
														},
														{
															"nativeSrc": "2366:139:9",
															"nodeType": "YulAssignment",
															"src": "2366:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2500:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2500:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2374:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "2374:124:9"
																},
																"nativeSrc": "2374:131:9",
																"nodeType": "YulFunctionCall",
																"src": "2374:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2366:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2366:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2093:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2244:9:9",
														"nodeType": "YulTypedName",
														"src": "2244:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2259:4:9",
														"nodeType": "YulTypedName",
														"src": "2259:4:9",
														"type": ""
													}
												],
												"src": "2093:419:9"
											},
											{
												"body": {
													"nativeSrc": "2624:127:9",
													"nodeType": "YulBlock",
													"src": "2624:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2646:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2654:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2654:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:9"
																		},
																		"nativeSrc": "2642:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2642:14:9"
																	},
																	{
																		"hexValue": "477265656e20546f6b656e20616464726573732063616e6e6f74206265207468",
																		"kind": "string",
																		"nativeSrc": "2658:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2658:34:9",
																		"type": "",
																		"value": "Green Token address cannot be th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2635:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:9"
																},
																"nativeSrc": "2635:58:9",
																"nodeType": "YulFunctionCall",
																"src": "2635:58:9"
															},
															"nativeSrc": "2635:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "2635:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2714:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2714:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2722:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2722:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2710:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2710:3:9"
																		},
																		"nativeSrc": "2710:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2710:15:9"
																	},
																	{
																		"hexValue": "65207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2727:16:9",
																		"nodeType": "YulLiteral",
																		"src": "2727:16:9",
																		"type": "",
																		"value": "e zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2703:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2703:6:9"
																},
																"nativeSrc": "2703:41:9",
																"nodeType": "YulFunctionCall",
																"src": "2703:41:9"
															},
															"nativeSrc": "2703:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "2703:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
												"nativeSrc": "2518:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2616:6:9",
														"nodeType": "YulTypedName",
														"src": "2616:6:9",
														"type": ""
													}
												],
												"src": "2518:233:9"
											},
											{
												"body": {
													"nativeSrc": "2903:220:9",
													"nodeType": "YulBlock",
													"src": "2903:220:9",
													"statements": [
														{
															"nativeSrc": "2913:74:9",
															"nodeType": "YulAssignment",
															"src": "2913:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2979:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2979:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2920:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2920:58:9"
																},
																"nativeSrc": "2920:67:9",
																"nodeType": "YulFunctionCall",
																"src": "2920:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2913:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2913:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3085:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3085:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																	"nativeSrc": "2996:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "2996:88:9"
																},
																"nativeSrc": "2996:93:9",
																"nodeType": "YulFunctionCall",
																"src": "2996:93:9"
															},
															"nativeSrc": "2996:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "2996:93:9"
														},
														{
															"nativeSrc": "3098:19:9",
															"nodeType": "YulAssignment",
															"src": "3098:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3109:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3109:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3114:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3114:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3105:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:9"
																},
																"nativeSrc": "3105:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3105:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3098:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3098:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2757:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2891:3:9",
														"nodeType": "YulTypedName",
														"src": "2891:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2899:3:9",
														"nodeType": "YulTypedName",
														"src": "2899:3:9",
														"type": ""
													}
												],
												"src": "2757:366:9"
											},
											{
												"body": {
													"nativeSrc": "3300:248:9",
													"nodeType": "YulBlock",
													"src": "3300:248:9",
													"statements": [
														{
															"nativeSrc": "3310:26:9",
															"nodeType": "YulAssignment",
															"src": "3310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3322:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3322:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3333:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3318:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:9"
																},
																"nativeSrc": "3318:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3310:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3357:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3368:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3368:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3353:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:9"
																		},
																		"nativeSrc": "3353:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3353:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3376:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3376:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3382:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3372:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:9"
																		},
																		"nativeSrc": "3372:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3372:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3346:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:9"
																},
																"nativeSrc": "3346:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3346:47:9"
															},
															"nativeSrc": "3346:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3346:47:9"
														},
														{
															"nativeSrc": "3402:139:9",
															"nodeType": "YulAssignment",
															"src": "3402:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3536:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3536:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3410:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3410:124:9"
																},
																"nativeSrc": "3410:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3410:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3402:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3402:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3129:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3280:9:9",
														"nodeType": "YulTypedName",
														"src": "3280:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3295:4:9",
														"nodeType": "YulTypedName",
														"src": "3295:4:9",
														"type": ""
													}
												],
												"src": "3129:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner cannot be the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833(memPtr) {\n\n        mstore(add(memPtr, 0), \"Green Token address cannot be th\")\n\n        mstore(add(memPtr, 32), \"e zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161113538038061113583398181016040528101906100319190610231565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610096906102c9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010490610357565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610375565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610200826101d7565b9050919050565b610210816101f6565b811461021a575f80fd5b50565b5f8151905061022b81610207565b92915050565b5f8060408385031215610247576102466101d3565b5b5f6102548582860161021d565b92505060206102658582860161021d565b9150509250929050565b5f82825260208201905092915050565b7f4f776e65722063616e6e6f7420626520746865207a65726f20616464726573735f82015250565b5f6102b360208361026f565b91506102be8261027f565b602082019050919050565b5f6020820190508181035f8301526102e0816102a7565b9050919050565b7f477265656e20546f6b656e20616464726573732063616e6e6f742062652074685f8201527f65207a65726f2061646472657373000000000000000000000000000000000000602082015250565b5f610341602e8361026f565b915061034c826102e7565b604082019050919050565b5f6020820190508181035f83015261036e81610335565b9050919050565b610db3806103825f395ff3fe608060405260043610610073575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100f657806399e9c1dd14610120578063d5f394881461014a578063ea017105146101745761007a565b806302b32af51461007c5780631f31dc01146100a6578063880cdc31146100ce5761007a565b3661007a57005b005b348015610087575f80fd5b5061009061018a565b60405161009d9190610975565b60405180910390f35b3480156100b1575f80fd5b506100cc60048036038101906100c791906109cd565b6101af565b005b3480156100d9575f80fd5b506100f460048036038101906100ef91906109cd565b610332565b005b348015610101575f80fd5b5061010a6104b4565b6040516101179190610a07565b60405180910390f35b34801561012b575f80fd5b506101346104d7565b6040516101419190610a38565b60405180910390f35b348015610155575f80fd5b5061015e610576565b60405161016b9190610a07565b60405180910390f35b34801561017f575f80fd5b5061018861059b565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610ad1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a390610b5f565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f55b6b6fe98d11600785423c3f7630dee64b0f6fa54e8a25362aa522d83dfd24360405160405180910390a250565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610ad1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610bed565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b60405160405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105329190610a07565b602060405180830381865afa15801561054d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105719190610c35565b905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061f90610cd0565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106839190610a07565b602060405180830381865afa15801561069e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c29190610c35565b90505f8111610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90610d38565b60405180910390fd5b6107715f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107e19092919063ffffffff16565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516107d69190610a38565b60405180910390a250565b61085b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610814929190610d56565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610860565b505050565b5f8060205f8451602086015f885af18061087f576040513d5f823e3d81fd5b3d92505f519150505f82146108985760018114156108b3565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156108f557836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108ec9190610a07565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61093d610938610933846108fb565b61091a565b6108fb565b9050919050565b5f61094e82610923565b9050919050565b5f61095f82610944565b9050919050565b61096f81610955565b82525050565b5f6020820190506109885f830184610966565b92915050565b5f80fd5b5f61099c826108fb565b9050919050565b6109ac81610992565b81146109b6575f80fd5b50565b5f813590506109c7816109a3565b92915050565b5f602082840312156109e2576109e161098e565b5b5f6109ef848285016109b9565b91505092915050565b610a0181610992565b82525050565b5f602082019050610a1a5f8301846109f8565b92915050565b5f819050919050565b610a3281610a20565b82525050565b5f602082019050610a4b5f830184610a29565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206465706c6f7965722063616e2063616c6c20746869732066756e635f8201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b5f610abb602483610a51565b9150610ac682610a61565b604082019050919050565b5f6020820190508181035f830152610ae881610aaf565b9050919050565b7f477265656e20546f6b656e20616464726573732063616e6e6f742062652074685f8201527f65207a65726f2061646472657373000000000000000000000000000000000000602082015250565b5f610b49602e83610a51565b9150610b5482610aef565b604082019050919050565b5f6020820190508181035f830152610b7681610b3d565b9050919050565b7f4e6577206f776e65722063616e6e6f7420626520746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610bd7602483610a51565b9150610be282610b7d565b604082019050919050565b5f6020820190508181035f830152610c0481610bcb565b9050919050565b610c1481610a20565b8114610c1e575f80fd5b50565b5f81519050610c2f81610c0b565b92915050565b5f60208284031215610c4a57610c4961098e565b5b5f610c5784828501610c21565b91505092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f610cba602183610a51565b9150610cc582610c60565b604082019050919050565b5f6020820190508181035f830152610ce781610cae565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f610d22601583610a51565b9150610d2d82610cee565b602082019050919050565b5f6020820190508181035f830152610d4f81610d16565b9050919050565b5f604082019050610d695f8301856109f8565b610d766020830184610a29565b939250505056fea2646970667358221220c02d03b12c5f3beb48621faac0b8472b5996bf528cd5abf1212ab6fce51371a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1135 CODESIZE SUB DUP1 PUSH2 0x1135 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x375 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x1D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x254 DUP6 DUP3 DUP7 ADD PUSH2 0x21D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x265 DUP6 DUP3 DUP7 ADD PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E65722063616E6E6F7420626520746865207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3 PUSH1 0x20 DUP4 PUSH2 0x26F JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE DUP3 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E0 DUP2 PUSH2 0x2A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x477265656E20546F6B656E20616464726573732063616E6E6F74206265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x65207A65726F2061646472657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x341 PUSH1 0x2E DUP4 PUSH2 0x26F JUMP JUMPDEST SWAP2 POP PUSH2 0x34C DUP3 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x36E DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB3 DUP1 PUSH2 0x382 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x99E9C1DD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xEA017105 EQ PUSH2 0x174 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2B32AF5 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x1F31DC01 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x880CDC31 EQ PUSH2 0xCE JUMPI PUSH2 0x7A JUMP JUMPDEST CALLDATASIZE PUSH2 0x7A JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x55B6B6FE98D11600785423C3F7630DEE64B0F6FA54E8A25362AA522D83DFD243 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x426 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4FFD725FC4A22075E9EC71C59EDF9C38CDEB588A91B24FC5B61388C5BE41282B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x771 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x85B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x860 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x898 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x8B3 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x8F5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93D PUSH2 0x938 PUSH2 0x933 DUP5 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x94E DUP3 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x95F DUP3 PUSH2 0x944 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x955 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x988 PUSH0 DUP4 ADD DUP5 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x99C DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x992 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C7 DUP2 PUSH2 0x9A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E2 JUMPI PUSH2 0x9E1 PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EF DUP5 DUP3 DUP6 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1A PUSH0 DUP4 ADD DUP5 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA32 DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4B PUSH0 DUP4 ADD DUP5 PUSH2 0xA29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206465706C6F7965722063616E2063616C6C20746869732066756E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xABB PUSH1 0x24 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC6 DUP3 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE8 DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x477265656E20546F6B656E20616464726573732063616E6E6F74206265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x65207A65726F2061646472657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB49 PUSH1 0x2E DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xB54 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB76 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E65722063616E6E6F7420626520746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD7 PUSH1 0x24 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC04 DUP2 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC14 DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC2F DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4A JUMPI PUSH2 0xC49 PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC57 DUP5 DUP3 DUP6 ADD PUSH2 0xC21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCBA PUSH1 0x21 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE7 DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD22 PUSH1 0x15 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2D DUP3 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD69 PUSH0 DUP4 ADD DUP6 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xD76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x2D SUB 0xB1 0x2C PUSH0 EXTCODESIZE 0xEB BASEFEE PUSH3 0x1FAAC0 0xB8 SELFBALANCE 0x2B MSIZE SWAP7 0xBF MSTORE DUP13 0xD5 0xAB CALL 0x21 0x2A 0xB6 0xFC 0xE5 SGT PUSH18 0xA264736F6C634300081A0033000000000000 ",
							"sourceMap": "188:1969:8:-:0;;;783:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;890:1;865:27;;:13;:27;;;857:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;978:1;948:32;;:18;:32;;;940:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1052:13;1044:5;;:21;;;;;;;;;;;;;;;;;;1087:10;1076:8;;:21;;;;;;;;;;;;;;;;;;1128:18;1108:10;;:39;;;;;;;;;;;;;;;;;;783:372;;188:1969;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:182::-;1673:34;1669:1;1661:6;1657:14;1650:58;1533:182;:::o;1721:366::-;1863:3;1884:67;1948:2;1943:3;1884:67;:::i;:::-;1877:74;;1960:93;2049:3;1960:93;:::i;:::-;2078:2;2073:3;2069:12;2062:19;;1721:366;;;:::o;2093:419::-;2259:4;2297:2;2286:9;2282:18;2274:26;;2346:9;2340:4;2336:20;2332:1;2321:9;2317:17;2310:47;2374:131;2500:4;2374:131;:::i;:::-;2366:139;;2093:419;;;:::o;2518:233::-;2658:34;2654:1;2646:6;2642:14;2635:58;2727:16;2722:2;2714:6;2710:15;2703:41;2518:233;:::o;2757:366::-;2899:3;2920:67;2984:2;2979:3;2920:67;:::i;:::-;2913:74;;2996:93;3085:3;2996:93;:::i;:::-;3114:2;3109:3;3105:12;3098:19;;2757:366;;;:::o;3129:419::-;3295:4;3333:2;3322:9;3318:18;3310:26;;3382:9;3376:4;3372:20;3368:1;3357:9;3353:17;3346:47;3410:131;3536:4;3410:131;:::i;:::-;3402:139;;3129:419;;;:::o;188:1969:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1078": {
									"entryPoint": null,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_536": {
									"entryPoint": 2144,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deployer_883": {
									"entryPoint": 1398,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getGreenTokenBalance_1070": {
									"entryPoint": 1239,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@greenToken_886": {
									"entryPoint": 394,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_881": {
									"entryPoint": 1204,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_214": {
									"entryPoint": 2017,
									"id": 214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateGreenTokenAddress_1021": {
									"entryPoint": 431,
									"id": 1021,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateOwner_993": {
									"entryPoint": 818,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyAndWithdraw_1056": {
									"entryPoint": 1435,
									"id": 1056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$167_to_t_address": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9105:9",
										"nodeType": "YulBlock",
										"src": "0:9105:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:9",
													"nodeType": "YulBlock",
													"src": "52:81:9",
													"statements": [
														{
															"nativeSrc": "62:65:9",
															"nodeType": "YulAssignment",
															"src": "62:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:9",
																		"nodeType": "YulLiteral",
																		"src": "84:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:9"
																},
																"nativeSrc": "73:54:9",
																"nodeType": "YulFunctionCall",
																"src": "73:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:126:9"
											},
											{
												"body": {
													"nativeSrc": "171:28:9",
													"nodeType": "YulBlock",
													"src": "171:28:9",
													"statements": [
														{
															"nativeSrc": "181:12:9",
															"nodeType": "YulAssignment",
															"src": "181:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:9",
																"nodeType": "YulIdentifier",
																"src": "188:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:9",
														"nodeType": "YulTypedName",
														"src": "157:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:9",
														"nodeType": "YulTypedName",
														"src": "167:3:9",
														"type": ""
													}
												],
												"src": "139:60:9"
											},
											{
												"body": {
													"nativeSrc": "265:82:9",
													"nodeType": "YulBlock",
													"src": "265:82:9",
													"statements": [
														{
															"nativeSrc": "275:66:9",
															"nodeType": "YulAssignment",
															"src": "275:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:9"
																				},
																				"nativeSrc": "315:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:9"
																		},
																		"nativeSrc": "306:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:9"
																},
																"nativeSrc": "288:53:9",
																"nodeType": "YulFunctionCall",
																"src": "288:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:9",
														"nodeType": "YulTypedName",
														"src": "245:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:9",
														"nodeType": "YulTypedName",
														"src": "255:9:9",
														"type": ""
													}
												],
												"src": "205:142:9"
											},
											{
												"body": {
													"nativeSrc": "413:66:9",
													"nodeType": "YulBlock",
													"src": "413:66:9",
													"statements": [
														{
															"nativeSrc": "423:50:9",
															"nodeType": "YulAssignment",
															"src": "423:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:9"
																},
																"nativeSrc": "436:37:9",
																"nodeType": "YulFunctionCall",
																"src": "436:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:9",
														"nodeType": "YulTypedName",
														"src": "393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:9",
														"nodeType": "YulTypedName",
														"src": "403:9:9",
														"type": ""
													}
												],
												"src": "353:126:9"
											},
											{
												"body": {
													"nativeSrc": "559:66:9",
													"nodeType": "YulBlock",
													"src": "559:66:9",
													"statements": [
														{
															"nativeSrc": "569:50:9",
															"nodeType": "YulAssignment",
															"src": "569:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:9"
																},
																"nativeSrc": "582:37:9",
																"nodeType": "YulFunctionCall",
																"src": "582:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$167_to_t_address",
												"nativeSrc": "485:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:9",
														"nodeType": "YulTypedName",
														"src": "539:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:9",
														"nodeType": "YulTypedName",
														"src": "549:9:9",
														"type": ""
													}
												],
												"src": "485:140:9"
											},
											{
												"body": {
													"nativeSrc": "710:80:9",
													"nodeType": "YulBlock",
													"src": "710:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$167_to_t_address",
																			"nativeSrc": "732:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:9"
																		},
																		"nativeSrc": "732:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:9"
																},
																"nativeSrc": "720:64:9",
																"nodeType": "YulFunctionCall",
																"src": "720:64:9"
															},
															"nativeSrc": "720:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
												"nativeSrc": "631:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:9",
														"nodeType": "YulTypedName",
														"src": "698:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:9",
														"nodeType": "YulTypedName",
														"src": "705:3:9",
														"type": ""
													}
												],
												"src": "631:159:9"
											},
											{
												"body": {
													"nativeSrc": "908:138:9",
													"nodeType": "YulBlock",
													"src": "908:138:9",
													"statements": [
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:9",
																		"nodeType": "YulLiteral",
																		"src": "941:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:9"
																		},
																		"nativeSrc": "1021:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
																	"nativeSrc": "954:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:9"
																},
																"nativeSrc": "954:85:9",
																"nodeType": "YulFunctionCall",
																"src": "954:85:9"
															},
															"nativeSrc": "954:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:9",
														"nodeType": "YulTypedName",
														"src": "880:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:9",
														"nodeType": "YulTypedName",
														"src": "892:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:9",
														"nodeType": "YulTypedName",
														"src": "903:4:9",
														"type": ""
													}
												],
												"src": "796:250:9"
											},
											{
												"body": {
													"nativeSrc": "1092:35:9",
													"nodeType": "YulBlock",
													"src": "1092:35:9",
													"statements": [
														{
															"nativeSrc": "1102:19:9",
															"nodeType": "YulAssignment",
															"src": "1102:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:9"
																},
																"nativeSrc": "1112:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:9",
														"nodeType": "YulTypedName",
														"src": "1085:6:9",
														"type": ""
													}
												],
												"src": "1052:75:9"
											},
											{
												"body": {
													"nativeSrc": "1222:28:9",
													"nodeType": "YulBlock",
													"src": "1222:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:9"
																},
																"nativeSrc": "1232:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:9"
															},
															"nativeSrc": "1232:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:9"
											},
											{
												"body": {
													"nativeSrc": "1345:28:9",
													"nodeType": "YulBlock",
													"src": "1345:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:9"
																},
																"nativeSrc": "1355:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:9"
															},
															"nativeSrc": "1355:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:9"
											},
											{
												"body": {
													"nativeSrc": "1424:51:9",
													"nodeType": "YulBlock",
													"src": "1424:51:9",
													"statements": [
														{
															"nativeSrc": "1434:35:9",
															"nodeType": "YulAssignment",
															"src": "1434:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1463:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1463:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1445:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1445:17:9"
																},
																"nativeSrc": "1445:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1445:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1379:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:9",
														"nodeType": "YulTypedName",
														"src": "1406:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:9",
														"nodeType": "YulTypedName",
														"src": "1416:7:9",
														"type": ""
													}
												],
												"src": "1379:96:9"
											},
											{
												"body": {
													"nativeSrc": "1524:79:9",
													"nodeType": "YulBlock",
													"src": "1524:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1581:16:9",
																"nodeType": "YulBlock",
																"src": "1581:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1590:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1590:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1593:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1593:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1583:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1583:6:9"
																			},
																			"nativeSrc": "1583:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1583:12:9"
																		},
																		"nativeSrc": "1583:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1583:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1547:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1547:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1572:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1572:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1554:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1554:17:9"
																				},
																				"nativeSrc": "1554:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1554:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1544:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1544:2:9"
																		},
																		"nativeSrc": "1544:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1537:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:9"
																},
																"nativeSrc": "1537:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1537:43:9"
															},
															"nativeSrc": "1534:63:9",
															"nodeType": "YulIf",
															"src": "1534:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1481:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1517:5:9",
														"nodeType": "YulTypedName",
														"src": "1517:5:9",
														"type": ""
													}
												],
												"src": "1481:122:9"
											},
											{
												"body": {
													"nativeSrc": "1661:87:9",
													"nodeType": "YulBlock",
													"src": "1661:87:9",
													"statements": [
														{
															"nativeSrc": "1671:29:9",
															"nodeType": "YulAssignment",
															"src": "1671:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1693:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1680:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1680:12:9"
																},
																"nativeSrc": "1680:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1680:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1671:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1709:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1709:26:9"
																},
																"nativeSrc": "1709:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:9"
															},
															"nativeSrc": "1709:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1709:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1609:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1639:6:9",
														"nodeType": "YulTypedName",
														"src": "1639:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1647:3:9",
														"nodeType": "YulTypedName",
														"src": "1647:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1655:5:9",
														"nodeType": "YulTypedName",
														"src": "1655:5:9",
														"type": ""
													}
												],
												"src": "1609:139:9"
											},
											{
												"body": {
													"nativeSrc": "1820:263:9",
													"nodeType": "YulBlock",
													"src": "1820:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1866:83:9",
																"nodeType": "YulBlock",
																"src": "1866:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1868:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:9"
																			},
																			"nativeSrc": "1868:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:9"
																		},
																		"nativeSrc": "1868:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1841:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1850:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1837:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:9"
																		},
																		"nativeSrc": "1837:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1862:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1833:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:9"
																},
																"nativeSrc": "1833:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1833:32:9"
															},
															"nativeSrc": "1830:119:9",
															"nodeType": "YulIf",
															"src": "1830:119:9"
														},
														{
															"nativeSrc": "1959:117:9",
															"nodeType": "YulBlock",
															"src": "1959:117:9",
															"statements": [
																{
																	"nativeSrc": "1974:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1988:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1978:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2003:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2003:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2038:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2049:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2034:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:9"
																				},
																				"nativeSrc": "2034:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2058:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2013:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:9"
																		},
																		"nativeSrc": "2013:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2003:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1754:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1790:9:9",
														"nodeType": "YulTypedName",
														"src": "1790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1801:7:9",
														"nodeType": "YulTypedName",
														"src": "1801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1813:6:9",
														"nodeType": "YulTypedName",
														"src": "1813:6:9",
														"type": ""
													}
												],
												"src": "1754:329:9"
											},
											{
												"body": {
													"nativeSrc": "2154:53:9",
													"nodeType": "YulBlock",
													"src": "2154:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2194:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2194:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2176:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2176:17:9"
																		},
																		"nativeSrc": "2176:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2176:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:9"
																},
																"nativeSrc": "2164:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2164:37:9"
															},
															"nativeSrc": "2164:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2164:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2089:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2142:5:9",
														"nodeType": "YulTypedName",
														"src": "2142:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2149:3:9",
														"nodeType": "YulTypedName",
														"src": "2149:3:9",
														"type": ""
													}
												],
												"src": "2089:118:9"
											},
											{
												"body": {
													"nativeSrc": "2311:124:9",
													"nodeType": "YulBlock",
													"src": "2311:124:9",
													"statements": [
														{
															"nativeSrc": "2321:26:9",
															"nodeType": "YulAssignment",
															"src": "2321:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2333:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2333:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2329:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2329:3:9"
																},
																"nativeSrc": "2329:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2329:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2321:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2321:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2401:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2414:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2425:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2425:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2410:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:9"
																		},
																		"nativeSrc": "2410:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2357:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2357:43:9"
																},
																"nativeSrc": "2357:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2357:71:9"
															},
															"nativeSrc": "2357:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2357:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2213:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2283:9:9",
														"nodeType": "YulTypedName",
														"src": "2283:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2295:6:9",
														"nodeType": "YulTypedName",
														"src": "2295:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2306:4:9",
														"nodeType": "YulTypedName",
														"src": "2306:4:9",
														"type": ""
													}
												],
												"src": "2213:222:9"
											},
											{
												"body": {
													"nativeSrc": "2486:32:9",
													"nodeType": "YulBlock",
													"src": "2486:32:9",
													"statements": [
														{
															"nativeSrc": "2496:16:9",
															"nodeType": "YulAssignment",
															"src": "2496:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2507:5:9",
																"nodeType": "YulIdentifier",
																"src": "2507:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2496:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2496:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2441:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2468:5:9",
														"nodeType": "YulTypedName",
														"src": "2468:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2478:7:9",
														"nodeType": "YulTypedName",
														"src": "2478:7:9",
														"type": ""
													}
												],
												"src": "2441:77:9"
											},
											{
												"body": {
													"nativeSrc": "2589:53:9",
													"nodeType": "YulBlock",
													"src": "2589:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2611:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:9"
																		},
																		"nativeSrc": "2611:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:9"
																},
																"nativeSrc": "2599:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:9"
															},
															"nativeSrc": "2599:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2524:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:9",
														"nodeType": "YulTypedName",
														"src": "2577:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:9",
														"nodeType": "YulTypedName",
														"src": "2584:3:9",
														"type": ""
													}
												],
												"src": "2524:118:9"
											},
											{
												"body": {
													"nativeSrc": "2746:124:9",
													"nodeType": "YulBlock",
													"src": "2746:124:9",
													"statements": [
														{
															"nativeSrc": "2756:26:9",
															"nodeType": "YulAssignment",
															"src": "2756:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:9"
																},
																"nativeSrc": "2764:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:9"
																		},
																		"nativeSrc": "2845:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2792:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:9"
																},
																"nativeSrc": "2792:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:9"
															},
															"nativeSrc": "2792:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2648:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:9",
														"nodeType": "YulTypedName",
														"src": "2718:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:9",
														"nodeType": "YulTypedName",
														"src": "2730:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:9",
														"nodeType": "YulTypedName",
														"src": "2741:4:9",
														"type": ""
													}
												],
												"src": "2648:222:9"
											},
											{
												"body": {
													"nativeSrc": "2972:73:9",
													"nodeType": "YulBlock",
													"src": "2972:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2989:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2989:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2994:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2994:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2982:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:9"
																},
																"nativeSrc": "2982:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2982:19:9"
															},
															"nativeSrc": "2982:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "2982:19:9"
														},
														{
															"nativeSrc": "3010:29:9",
															"nodeType": "YulAssignment",
															"src": "3010:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3029:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3034:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3034:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3025:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3025:3:9"
																},
																"nativeSrc": "3025:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3025:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3010:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "3010:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2876:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2944:3:9",
														"nodeType": "YulTypedName",
														"src": "2944:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2949:6:9",
														"nodeType": "YulTypedName",
														"src": "2949:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2960:11:9",
														"nodeType": "YulTypedName",
														"src": "2960:11:9",
														"type": ""
													}
												],
												"src": "2876:169:9"
											},
											{
												"body": {
													"nativeSrc": "3157:117:9",
													"nodeType": "YulBlock",
													"src": "3157:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3179:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3179:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3187:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3187:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3175:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:9"
																		},
																		"nativeSrc": "3175:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3175:14:9"
																	},
																	{
																		"hexValue": "4f6e6c79206465706c6f7965722063616e2063616c6c20746869732066756e63",
																		"kind": "string",
																		"nativeSrc": "3191:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3191:34:9",
																		"type": "",
																		"value": "Only deployer can call this func"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3168:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:9"
																},
																"nativeSrc": "3168:58:9",
																"nodeType": "YulFunctionCall",
																"src": "3168:58:9"
															},
															"nativeSrc": "3168:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "3168:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3247:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3247:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3255:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3255:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3243:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:9"
																		},
																		"nativeSrc": "3243:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3243:15:9"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nativeSrc": "3260:6:9",
																		"nodeType": "YulLiteral",
																		"src": "3260:6:9",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3236:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3236:6:9"
																},
																"nativeSrc": "3236:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3236:31:9"
															},
															"nativeSrc": "3236:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3236:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8",
												"nativeSrc": "3051:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3149:6:9",
														"nodeType": "YulTypedName",
														"src": "3149:6:9",
														"type": ""
													}
												],
												"src": "3051:223:9"
											},
											{
												"body": {
													"nativeSrc": "3426:220:9",
													"nodeType": "YulBlock",
													"src": "3426:220:9",
													"statements": [
														{
															"nativeSrc": "3436:74:9",
															"nodeType": "YulAssignment",
															"src": "3436:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3502:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3502:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3507:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3443:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3443:58:9"
																},
																"nativeSrc": "3443:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3443:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3436:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3436:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3608:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3608:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8",
																	"nativeSrc": "3519:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3519:88:9"
																},
																"nativeSrc": "3519:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3519:93:9"
															},
															"nativeSrc": "3519:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3519:93:9"
														},
														{
															"nativeSrc": "3621:19:9",
															"nodeType": "YulAssignment",
															"src": "3621:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3632:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3632:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3637:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3628:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:9"
																},
																"nativeSrc": "3628:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3621:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3280:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3414:3:9",
														"nodeType": "YulTypedName",
														"src": "3414:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3422:3:9",
														"nodeType": "YulTypedName",
														"src": "3422:3:9",
														"type": ""
													}
												],
												"src": "3280:366:9"
											},
											{
												"body": {
													"nativeSrc": "3823:248:9",
													"nodeType": "YulBlock",
													"src": "3823:248:9",
													"statements": [
														{
															"nativeSrc": "3833:26:9",
															"nodeType": "YulAssignment",
															"src": "3833:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3845:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3845:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3856:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3856:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3841:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:9"
																},
																"nativeSrc": "3841:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3841:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3833:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3833:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3880:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3891:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3891:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3876:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:9"
																		},
																		"nativeSrc": "3876:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3899:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3899:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3895:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3895:3:9"
																		},
																		"nativeSrc": "3895:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3895:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3869:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:9"
																},
																"nativeSrc": "3869:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3869:47:9"
															},
															"nativeSrc": "3869:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3869:47:9"
														},
														{
															"nativeSrc": "3925:139:9",
															"nodeType": "YulAssignment",
															"src": "3925:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4059:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4059:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3933:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3933:124:9"
																},
																"nativeSrc": "3933:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3933:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3925:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3925:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3652:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3803:9:9",
														"nodeType": "YulTypedName",
														"src": "3803:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3818:4:9",
														"nodeType": "YulTypedName",
														"src": "3818:4:9",
														"type": ""
													}
												],
												"src": "3652:419:9"
											},
											{
												"body": {
													"nativeSrc": "4183:127:9",
													"nodeType": "YulBlock",
													"src": "4183:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4205:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4205:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4213:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4213:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:9"
																		},
																		"nativeSrc": "4201:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4201:14:9"
																	},
																	{
																		"hexValue": "477265656e20546f6b656e20616464726573732063616e6e6f74206265207468",
																		"kind": "string",
																		"nativeSrc": "4217:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4217:34:9",
																		"type": "",
																		"value": "Green Token address cannot be th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4194:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4194:6:9"
																},
																"nativeSrc": "4194:58:9",
																"nodeType": "YulFunctionCall",
																"src": "4194:58:9"
															},
															"nativeSrc": "4194:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "4194:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4273:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4273:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4281:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4281:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4269:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:9"
																		},
																		"nativeSrc": "4269:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4269:15:9"
																	},
																	{
																		"hexValue": "65207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4286:16:9",
																		"nodeType": "YulLiteral",
																		"src": "4286:16:9",
																		"type": "",
																		"value": "e zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4262:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:9"
																},
																"nativeSrc": "4262:41:9",
																"nodeType": "YulFunctionCall",
																"src": "4262:41:9"
															},
															"nativeSrc": "4262:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "4262:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
												"nativeSrc": "4077:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4175:6:9",
														"nodeType": "YulTypedName",
														"src": "4175:6:9",
														"type": ""
													}
												],
												"src": "4077:233:9"
											},
											{
												"body": {
													"nativeSrc": "4462:220:9",
													"nodeType": "YulBlock",
													"src": "4462:220:9",
													"statements": [
														{
															"nativeSrc": "4472:74:9",
															"nodeType": "YulAssignment",
															"src": "4472:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4538:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4538:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4543:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4543:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4479:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:58:9"
																},
																"nativeSrc": "4479:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4472:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4472:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4644:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4644:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																	"nativeSrc": "4555:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "4555:88:9"
																},
																"nativeSrc": "4555:93:9",
																"nodeType": "YulFunctionCall",
																"src": "4555:93:9"
															},
															"nativeSrc": "4555:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "4555:93:9"
														},
														{
															"nativeSrc": "4657:19:9",
															"nodeType": "YulAssignment",
															"src": "4657:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4668:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4668:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4673:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4673:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4664:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:9"
																},
																"nativeSrc": "4664:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4664:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4657:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4657:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4316:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4450:3:9",
														"nodeType": "YulTypedName",
														"src": "4450:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4458:3:9",
														"nodeType": "YulTypedName",
														"src": "4458:3:9",
														"type": ""
													}
												],
												"src": "4316:366:9"
											},
											{
												"body": {
													"nativeSrc": "4859:248:9",
													"nodeType": "YulBlock",
													"src": "4859:248:9",
													"statements": [
														{
															"nativeSrc": "4869:26:9",
															"nodeType": "YulAssignment",
															"src": "4869:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4881:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4881:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:9"
																},
																"nativeSrc": "4877:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4877:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4869:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4869:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4916:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4916:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4927:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4927:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4912:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:9"
																		},
																		"nativeSrc": "4912:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4935:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4935:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4941:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4941:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4931:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:9"
																		},
																		"nativeSrc": "4931:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4905:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:9"
																},
																"nativeSrc": "4905:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4905:47:9"
															},
															"nativeSrc": "4905:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4905:47:9"
														},
														{
															"nativeSrc": "4961:139:9",
															"nodeType": "YulAssignment",
															"src": "4961:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5095:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5095:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4969:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4969:124:9"
																},
																"nativeSrc": "4969:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4969:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4961:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4688:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4839:9:9",
														"nodeType": "YulTypedName",
														"src": "4839:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4854:4:9",
														"nodeType": "YulTypedName",
														"src": "4854:4:9",
														"type": ""
													}
												],
												"src": "4688:419:9"
											},
											{
												"body": {
													"nativeSrc": "5219:117:9",
													"nodeType": "YulBlock",
													"src": "5219:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5241:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5241:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5249:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5249:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5237:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:9"
																		},
																		"nativeSrc": "5237:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5237:14:9"
																	},
																	{
																		"hexValue": "4e6577206f776e65722063616e6e6f7420626520746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "5253:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5253:34:9",
																		"type": "",
																		"value": "New owner cannot be the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5230:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5230:6:9"
																},
																"nativeSrc": "5230:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5230:58:9"
															},
															"nativeSrc": "5230:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5230:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5309:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5309:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5317:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5317:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5305:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5305:3:9"
																		},
																		"nativeSrc": "5305:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5305:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5322:6:9",
																		"nodeType": "YulLiteral",
																		"src": "5322:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5298:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5298:6:9"
																},
																"nativeSrc": "5298:31:9",
																"nodeType": "YulFunctionCall",
																"src": "5298:31:9"
															},
															"nativeSrc": "5298:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "5298:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422",
												"nativeSrc": "5113:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5211:6:9",
														"nodeType": "YulTypedName",
														"src": "5211:6:9",
														"type": ""
													}
												],
												"src": "5113:223:9"
											},
											{
												"body": {
													"nativeSrc": "5488:220:9",
													"nodeType": "YulBlock",
													"src": "5488:220:9",
													"statements": [
														{
															"nativeSrc": "5498:74:9",
															"nodeType": "YulAssignment",
															"src": "5498:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5564:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5564:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5569:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5569:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5505:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5505:58:9"
																},
																"nativeSrc": "5505:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5505:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5498:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5498:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5670:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5670:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422",
																	"nativeSrc": "5581:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5581:88:9"
																},
																"nativeSrc": "5581:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5581:93:9"
															},
															"nativeSrc": "5581:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5581:93:9"
														},
														{
															"nativeSrc": "5683:19:9",
															"nodeType": "YulAssignment",
															"src": "5683:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5694:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5699:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5690:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5690:3:9"
																},
																"nativeSrc": "5690:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5690:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5683:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5342:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5484:3:9",
														"nodeType": "YulTypedName",
														"src": "5484:3:9",
														"type": ""
													}
												],
												"src": "5342:366:9"
											},
											{
												"body": {
													"nativeSrc": "5885:248:9",
													"nodeType": "YulBlock",
													"src": "5885:248:9",
													"statements": [
														{
															"nativeSrc": "5895:26:9",
															"nodeType": "YulAssignment",
															"src": "5895:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5907:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5907:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5918:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5903:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5903:3:9"
																},
																"nativeSrc": "5903:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5903:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5895:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5895:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5942:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5942:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5953:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5953:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5938:3:9"
																		},
																		"nativeSrc": "5938:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5938:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5961:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5961:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5967:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5957:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:9"
																		},
																		"nativeSrc": "5957:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5931:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5931:6:9"
																},
																"nativeSrc": "5931:47:9",
																"nodeType": "YulFunctionCall",
																"src": "5931:47:9"
															},
															"nativeSrc": "5931:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "5931:47:9"
														},
														{
															"nativeSrc": "5987:139:9",
															"nodeType": "YulAssignment",
															"src": "5987:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6121:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6121:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5995:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "5995:124:9"
																},
																"nativeSrc": "5995:131:9",
																"nodeType": "YulFunctionCall",
																"src": "5995:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5987:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5987:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5714:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5865:9:9",
														"nodeType": "YulTypedName",
														"src": "5865:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5880:4:9",
														"nodeType": "YulTypedName",
														"src": "5880:4:9",
														"type": ""
													}
												],
												"src": "5714:419:9"
											},
											{
												"body": {
													"nativeSrc": "6182:79:9",
													"nodeType": "YulBlock",
													"src": "6182:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6239:16:9",
																"nodeType": "YulBlock",
																"src": "6239:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6248:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6248:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6251:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6251:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6241:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6241:6:9"
																			},
																			"nativeSrc": "6241:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6241:12:9"
																		},
																		"nativeSrc": "6241:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6241:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6205:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6205:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6230:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6230:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6212:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6212:17:9"
																				},
																				"nativeSrc": "6212:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6212:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6202:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6202:2:9"
																		},
																		"nativeSrc": "6202:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6202:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6195:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:9"
																},
																"nativeSrc": "6195:43:9",
																"nodeType": "YulFunctionCall",
																"src": "6195:43:9"
															},
															"nativeSrc": "6192:63:9",
															"nodeType": "YulIf",
															"src": "6192:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6139:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6175:5:9",
														"nodeType": "YulTypedName",
														"src": "6175:5:9",
														"type": ""
													}
												],
												"src": "6139:122:9"
											},
											{
												"body": {
													"nativeSrc": "6330:80:9",
													"nodeType": "YulBlock",
													"src": "6330:80:9",
													"statements": [
														{
															"nativeSrc": "6340:22:9",
															"nodeType": "YulAssignment",
															"src": "6340:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6355:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6355:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6349:5:9"
																},
																"nativeSrc": "6349:13:9",
																"nodeType": "YulFunctionCall",
																"src": "6349:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6340:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6340:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6398:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6398:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6371:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "6371:26:9"
																},
																"nativeSrc": "6371:33:9",
																"nodeType": "YulFunctionCall",
																"src": "6371:33:9"
															},
															"nativeSrc": "6371:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "6371:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6267:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6308:6:9",
														"nodeType": "YulTypedName",
														"src": "6308:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6316:3:9",
														"nodeType": "YulTypedName",
														"src": "6316:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6324:5:9",
														"nodeType": "YulTypedName",
														"src": "6324:5:9",
														"type": ""
													}
												],
												"src": "6267:143:9"
											},
											{
												"body": {
													"nativeSrc": "6493:274:9",
													"nodeType": "YulBlock",
													"src": "6493:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6539:83:9",
																"nodeType": "YulBlock",
																"src": "6539:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6541:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6541:77:9"
																			},
																			"nativeSrc": "6541:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6541:79:9"
																		},
																		"nativeSrc": "6541:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6541:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6514:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6514:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6523:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6510:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:9"
																		},
																		"nativeSrc": "6510:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6535:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6506:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6506:3:9"
																},
																"nativeSrc": "6506:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6506:32:9"
															},
															"nativeSrc": "6503:119:9",
															"nodeType": "YulIf",
															"src": "6503:119:9"
														},
														{
															"nativeSrc": "6632:128:9",
															"nodeType": "YulBlock",
															"src": "6632:128:9",
															"statements": [
																{
																	"nativeSrc": "6647:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6647:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6661:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6661:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6651:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6651:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6676:74:9",
																	"nodeType": "YulAssignment",
																	"src": "6676:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6722:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6722:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6733:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6733:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6718:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6718:3:9"
																				},
																				"nativeSrc": "6718:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6718:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6742:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6742:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6686:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "6686:31:9"
																		},
																		"nativeSrc": "6686:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6676:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6676:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6416:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6463:9:9",
														"nodeType": "YulTypedName",
														"src": "6463:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6474:7:9",
														"nodeType": "YulTypedName",
														"src": "6474:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6486:6:9",
														"nodeType": "YulTypedName",
														"src": "6486:6:9",
														"type": ""
													}
												],
												"src": "6416:351:9"
											},
											{
												"body": {
													"nativeSrc": "6879:114:9",
													"nodeType": "YulBlock",
													"src": "6879:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6901:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6901:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6909:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6909:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6897:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6897:3:9"
																		},
																		"nativeSrc": "6897:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6897:14:9"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "6913:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6913:34:9",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6890:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6890:6:9"
																},
																"nativeSrc": "6890:58:9",
																"nodeType": "YulFunctionCall",
																"src": "6890:58:9"
															},
															"nativeSrc": "6890:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "6890:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6969:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6969:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6977:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6977:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6965:3:9"
																		},
																		"nativeSrc": "6965:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6965:15:9"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "6982:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6982:3:9",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6958:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6958:6:9"
																},
																"nativeSrc": "6958:28:9",
																"nodeType": "YulFunctionCall",
																"src": "6958:28:9"
															},
															"nativeSrc": "6958:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "6958:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "6773:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6871:6:9",
														"nodeType": "YulTypedName",
														"src": "6871:6:9",
														"type": ""
													}
												],
												"src": "6773:220:9"
											},
											{
												"body": {
													"nativeSrc": "7145:220:9",
													"nodeType": "YulBlock",
													"src": "7145:220:9",
													"statements": [
														{
															"nativeSrc": "7155:74:9",
															"nodeType": "YulAssignment",
															"src": "7155:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7221:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7221:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7226:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7162:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7162:58:9"
																},
																"nativeSrc": "7162:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7162:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7155:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7155:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7327:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7327:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "7238:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7238:88:9"
																},
																"nativeSrc": "7238:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7238:93:9"
															},
															"nativeSrc": "7238:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7238:93:9"
														},
														{
															"nativeSrc": "7340:19:9",
															"nodeType": "YulAssignment",
															"src": "7340:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7351:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7351:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7356:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7347:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:9"
																},
																"nativeSrc": "7347:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7347:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6999:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7133:3:9",
														"nodeType": "YulTypedName",
														"src": "7133:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7141:3:9",
														"nodeType": "YulTypedName",
														"src": "7141:3:9",
														"type": ""
													}
												],
												"src": "6999:366:9"
											},
											{
												"body": {
													"nativeSrc": "7542:248:9",
													"nodeType": "YulBlock",
													"src": "7542:248:9",
													"statements": [
														{
															"nativeSrc": "7552:26:9",
															"nodeType": "YulAssignment",
															"src": "7552:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7564:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7564:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7575:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7560:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7560:3:9"
																},
																"nativeSrc": "7560:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7560:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7552:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7552:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7599:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7599:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7610:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7610:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7595:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7595:3:9"
																		},
																		"nativeSrc": "7595:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7595:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7618:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7618:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7624:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7614:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7614:3:9"
																		},
																		"nativeSrc": "7614:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7614:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:9"
																},
																"nativeSrc": "7588:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7588:47:9"
															},
															"nativeSrc": "7588:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7588:47:9"
														},
														{
															"nativeSrc": "7644:139:9",
															"nodeType": "YulAssignment",
															"src": "7644:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7778:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7778:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7652:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7652:124:9"
																},
																"nativeSrc": "7652:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7652:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7644:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7644:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7371:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7522:9:9",
														"nodeType": "YulTypedName",
														"src": "7522:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7537:4:9",
														"nodeType": "YulTypedName",
														"src": "7537:4:9",
														"type": ""
													}
												],
												"src": "7371:419:9"
											},
											{
												"body": {
													"nativeSrc": "7902:65:9",
													"nodeType": "YulBlock",
													"src": "7902:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7924:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7924:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7932:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7932:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7920:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:9"
																		},
																		"nativeSrc": "7920:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7920:14:9"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "7936:23:9",
																		"nodeType": "YulLiteral",
																		"src": "7936:23:9",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:9"
																},
																"nativeSrc": "7913:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7913:47:9"
															},
															"nativeSrc": "7913:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7913:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "7796:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7894:6:9",
														"nodeType": "YulTypedName",
														"src": "7894:6:9",
														"type": ""
													}
												],
												"src": "7796:171:9"
											},
											{
												"body": {
													"nativeSrc": "8119:220:9",
													"nodeType": "YulBlock",
													"src": "8119:220:9",
													"statements": [
														{
															"nativeSrc": "8129:74:9",
															"nodeType": "YulAssignment",
															"src": "8129:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8195:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8195:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8200:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8200:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8136:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8136:58:9"
																},
																"nativeSrc": "8136:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8136:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8129:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8301:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "8212:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8212:88:9"
																},
																"nativeSrc": "8212:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8212:93:9"
															},
															"nativeSrc": "8212:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8212:93:9"
														},
														{
															"nativeSrc": "8314:19:9",
															"nodeType": "YulAssignment",
															"src": "8314:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8325:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8325:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8330:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8321:3:9"
																},
																"nativeSrc": "8321:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8321:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8314:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8314:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7973:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8107:3:9",
														"nodeType": "YulTypedName",
														"src": "8107:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8115:3:9",
														"nodeType": "YulTypedName",
														"src": "8115:3:9",
														"type": ""
													}
												],
												"src": "7973:366:9"
											},
											{
												"body": {
													"nativeSrc": "8516:248:9",
													"nodeType": "YulBlock",
													"src": "8516:248:9",
													"statements": [
														{
															"nativeSrc": "8526:26:9",
															"nodeType": "YulAssignment",
															"src": "8526:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8538:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8538:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8549:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8534:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:9"
																},
																"nativeSrc": "8534:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8534:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8526:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8526:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8573:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8573:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8584:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8584:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:9"
																		},
																		"nativeSrc": "8569:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8569:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8592:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8592:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8598:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8598:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8588:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8588:3:9"
																		},
																		"nativeSrc": "8588:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8588:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8562:6:9"
																},
																"nativeSrc": "8562:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8562:47:9"
															},
															"nativeSrc": "8562:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8562:47:9"
														},
														{
															"nativeSrc": "8618:139:9",
															"nodeType": "YulAssignment",
															"src": "8618:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8752:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8752:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8626:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8626:124:9"
																},
																"nativeSrc": "8626:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8626:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8618:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8618:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8345:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8496:9:9",
														"nodeType": "YulTypedName",
														"src": "8496:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8511:4:9",
														"nodeType": "YulTypedName",
														"src": "8511:4:9",
														"type": ""
													}
												],
												"src": "8345:419:9"
											},
											{
												"body": {
													"nativeSrc": "8896:206:9",
													"nodeType": "YulBlock",
													"src": "8896:206:9",
													"statements": [
														{
															"nativeSrc": "8906:26:9",
															"nodeType": "YulAssignment",
															"src": "8906:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8918:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8918:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8929:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8914:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8914:3:9"
																},
																"nativeSrc": "8914:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8914:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8906:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8986:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8986:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8999:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8999:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9010:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9010:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8995:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8995:3:9"
																		},
																		"nativeSrc": "8995:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8942:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8942:43:9"
																},
																"nativeSrc": "8942:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8942:71:9"
															},
															"nativeSrc": "8942:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8942:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9067:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9067:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9080:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9080:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9091:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9091:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9076:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9076:3:9"
																		},
																		"nativeSrc": "9076:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9076:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9023:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9023:43:9"
																},
																"nativeSrc": "9023:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9023:72:9"
															},
															"nativeSrc": "9023:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9023:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8770:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8860:9:9",
														"nodeType": "YulTypedName",
														"src": "8860:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8872:6:9",
														"nodeType": "YulTypedName",
														"src": "8872:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8880:6:9",
														"nodeType": "YulTypedName",
														"src": "8880:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8891:4:9",
														"nodeType": "YulTypedName",
														"src": "8891:4:9",
														"type": ""
													}
												],
												"src": "8770:332:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$167_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$167_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only deployer can call this func\")\n\n        mstore(add(memPtr, 32), \"tion\")\n\n    }\n\n    function abi_encode_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833(memPtr) {\n\n        mstore(add(memPtr, 0), \"Green Token address cannot be th\")\n\n        mstore(add(memPtr, 32), \"e zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422(memPtr) {\n\n        mstore(add(memPtr, 0), \"New owner cannot be the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610073575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100f657806399e9c1dd14610120578063d5f394881461014a578063ea017105146101745761007a565b806302b32af51461007c5780631f31dc01146100a6578063880cdc31146100ce5761007a565b3661007a57005b005b348015610087575f80fd5b5061009061018a565b60405161009d9190610975565b60405180910390f35b3480156100b1575f80fd5b506100cc60048036038101906100c791906109cd565b6101af565b005b3480156100d9575f80fd5b506100f460048036038101906100ef91906109cd565b610332565b005b348015610101575f80fd5b5061010a6104b4565b6040516101179190610a07565b60405180910390f35b34801561012b575f80fd5b506101346104d7565b6040516101419190610a38565b60405180910390f35b348015610155575f80fd5b5061015e610576565b60405161016b9190610a07565b60405180910390f35b34801561017f575f80fd5b5061018861059b565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610ad1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a390610b5f565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f55b6b6fe98d11600785423c3f7630dee64b0f6fa54e8a25362aa522d83dfd24360405160405180910390a250565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610ad1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610bed565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b60405160405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105329190610a07565b602060405180830381865afa15801561054d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105719190610c35565b905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061f90610cd0565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106839190610a07565b602060405180830381865afa15801561069e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c29190610c35565b90505f8111610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90610d38565b60405180910390fd5b6107715f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107e19092919063ffffffff16565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516107d69190610a38565b60405180910390a250565b61085b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610814929190610d56565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610860565b505050565b5f8060205f8451602086015f885af18061087f576040513d5f823e3d81fd5b3d92505f519150505f82146108985760018114156108b3565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156108f557836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108ec9190610a07565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61093d610938610933846108fb565b61091a565b6108fb565b9050919050565b5f61094e82610923565b9050919050565b5f61095f82610944565b9050919050565b61096f81610955565b82525050565b5f6020820190506109885f830184610966565b92915050565b5f80fd5b5f61099c826108fb565b9050919050565b6109ac81610992565b81146109b6575f80fd5b50565b5f813590506109c7816109a3565b92915050565b5f602082840312156109e2576109e161098e565b5b5f6109ef848285016109b9565b91505092915050565b610a0181610992565b82525050565b5f602082019050610a1a5f8301846109f8565b92915050565b5f819050919050565b610a3281610a20565b82525050565b5f602082019050610a4b5f830184610a29565b92915050565b5f82825260208201905092915050565b7f4f6e6c79206465706c6f7965722063616e2063616c6c20746869732066756e635f8201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b5f610abb602483610a51565b9150610ac682610a61565b604082019050919050565b5f6020820190508181035f830152610ae881610aaf565b9050919050565b7f477265656e20546f6b656e20616464726573732063616e6e6f742062652074685f8201527f65207a65726f2061646472657373000000000000000000000000000000000000602082015250565b5f610b49602e83610a51565b9150610b5482610aef565b604082019050919050565b5f6020820190508181035f830152610b7681610b3d565b9050919050565b7f4e6577206f776e65722063616e6e6f7420626520746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610bd7602483610a51565b9150610be282610b7d565b604082019050919050565b5f6020820190508181035f830152610c0481610bcb565b9050919050565b610c1481610a20565b8114610c1e575f80fd5b50565b5f81519050610c2f81610c0b565b92915050565b5f60208284031215610c4a57610c4961098e565b5b5f610c5784828501610c21565b91505092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f610cba602183610a51565b9150610cc582610c60565b604082019050919050565b5f6020820190508181035f830152610ce781610cae565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f610d22601583610a51565b9150610d2d82610cee565b602082019050919050565b5f6020820190508181035f830152610d4f81610d16565b9050919050565b5f604082019050610d695f8301856109f8565b610d766020830184610a29565b939250505056fea2646970667358221220c02d03b12c5f3beb48621faac0b8472b5996bf528cd5abf1212ab6fce51371a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x99E9C1DD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xEA017105 EQ PUSH2 0x174 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2B32AF5 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x1F31DC01 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x880CDC31 EQ PUSH2 0xCE JUMPI PUSH2 0x7A JUMP JUMPDEST CALLDATASIZE PUSH2 0x7A JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x55B6B6FE98D11600785423C3F7630DEE64B0F6FA54E8A25362AA522D83DFD243 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x426 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4FFD725FC4A22075E9EC71C59EDF9C38CDEB588A91B24FC5B61388C5BE41282B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x771 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x85B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x860 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x898 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x8B3 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x8F5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93D PUSH2 0x938 PUSH2 0x933 DUP5 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x94E DUP3 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x95F DUP3 PUSH2 0x944 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x955 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x988 PUSH0 DUP4 ADD DUP5 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x99C DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x992 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C7 DUP2 PUSH2 0x9A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E2 JUMPI PUSH2 0x9E1 PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EF DUP5 DUP3 DUP6 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1A PUSH0 DUP4 ADD DUP5 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA32 DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4B PUSH0 DUP4 ADD DUP5 PUSH2 0xA29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206465706C6F7965722063616E2063616C6C20746869732066756E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xABB PUSH1 0x24 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC6 DUP3 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE8 DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x477265656E20546F6B656E20616464726573732063616E6E6F74206265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x65207A65726F2061646472657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB49 PUSH1 0x2E DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xB54 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB76 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E65722063616E6E6F7420626520746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD7 PUSH1 0x24 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC04 DUP2 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC14 DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC2F DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4A JUMPI PUSH2 0xC49 PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC57 DUP5 DUP3 DUP6 ADD PUSH2 0xC21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCBA PUSH1 0x21 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE7 DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD22 PUSH1 0x15 DUP4 PUSH2 0xA51 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2D DUP3 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD69 PUSH0 DUP4 ADD DUP6 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xD76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x2D SUB 0xB1 0x2C PUSH0 EXTCODESIZE 0xEB BASEFEE PUSH3 0x1FAAC0 0xB8 SELFBALANCE 0x2B MSIZE SWAP7 0xBF MSTORE DUP13 0xD5 0xAB CALL 0x21 0x2A 0xB6 0xFC 0xE5 SGT PUSH18 0xA264736F6C634300081A0033000000000000 ",
							"sourceMap": "188:1969:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1387:276;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1163:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;251:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1954:125;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;278:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1671:275;;;;;;;;;;;;;:::i;:::-;;308:24;;;;;;;;;;;;;:::o;1387:276::-;579:8;;;;;;;;;;;565:22;;:10;:22;;;557:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1509:1:::1;1484:27;;:13;:27;;::::0;1476:86:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1593:13;1573:10;;:34;;;;;;;;;;;;;;;;;;1641:13;1623:32;;;;;;;;;;;;1387:276:::0;:::o;1163:216::-;579:8;;;;;;;;;;;565:22;;:10;:22;;;557:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1263:1:::1;1243:22;;:8;:22;;::::0;1235:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1325:8;1317:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;1362:8;1349:22;;;;;;;;;;;;1163:216:::0;:::o;251:20::-;;;;;;;;;;;;:::o;1954:125::-;2009:7;2036:10;;;;;;;;;;;:20;;;2065:4;2036:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:42;;1954:125;:::o;278:23::-;;;;;;;;;;;;;:::o;1671:275::-;711:5;;;;;;;;;;697:19;;:10;:19;;;689:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:15:::1;1748:10;;;;;;;;;;;:20;;;1777:4;1748:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1730:53;;1812:1;1802:7;:11;1794:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1852:39;1876:5;::::0;::::1;;;;;;;;1883:7;1852:10;;;;;;;;;;;:23;;;;:39;;;;;:::i;:::-;1923:5;::::0;::::1;;;;;;;;1907:31;;;1930:7;1907:31;;;;;;:::i;:::-;;;;;;;;1719:227;1671:275::o:0;1271:160:4:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7:126:9:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:96;1416:7;1445:24;1463:5;1445:24;:::i;:::-;1434:35;;1379:96;;;:::o;1481:122::-;1554:24;1572:5;1554:24;:::i;:::-;1547:5;1544:35;1534:63;;1593:1;1590;1583:12;1534:63;1481:122;:::o;1609:139::-;1655:5;1693:6;1680:20;1671:29;;1709:33;1736:5;1709:33;:::i;:::-;1609:139;;;;:::o;1754:329::-;1813:6;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;1754:329;;;;:::o;2089:118::-;2176:24;2194:5;2176:24;:::i;:::-;2171:3;2164:37;2089:118;;:::o;2213:222::-;2306:4;2344:2;2333:9;2329:18;2321:26;;2357:71;2425:1;2414:9;2410:17;2401:6;2357:71;:::i;:::-;2213:222;;;;:::o;2441:77::-;2478:7;2507:5;2496:16;;2441:77;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:169::-;2960:11;2994:6;2989:3;2982:19;3034:4;3029:3;3025:14;3010:29;;2876:169;;;;:::o;3051:223::-;3191:34;3187:1;3179:6;3175:14;3168:58;3260:6;3255:2;3247:6;3243:15;3236:31;3051:223;:::o;3280:366::-;3422:3;3443:67;3507:2;3502:3;3443:67;:::i;:::-;3436:74;;3519:93;3608:3;3519:93;:::i;:::-;3637:2;3632:3;3628:12;3621:19;;3280:366;;;:::o;3652:419::-;3818:4;3856:2;3845:9;3841:18;3833:26;;3905:9;3899:4;3895:20;3891:1;3880:9;3876:17;3869:47;3933:131;4059:4;3933:131;:::i;:::-;3925:139;;3652:419;;;:::o;4077:233::-;4217:34;4213:1;4205:6;4201:14;4194:58;4286:16;4281:2;4273:6;4269:15;4262:41;4077:233;:::o;4316:366::-;4458:3;4479:67;4543:2;4538:3;4479:67;:::i;:::-;4472:74;;4555:93;4644:3;4555:93;:::i;:::-;4673:2;4668:3;4664:12;4657:19;;4316:366;;;:::o;4688:419::-;4854:4;4892:2;4881:9;4877:18;4869:26;;4941:9;4935:4;4931:20;4927:1;4916:9;4912:17;4905:47;4969:131;5095:4;4969:131;:::i;:::-;4961:139;;4688:419;;;:::o;5113:223::-;5253:34;5249:1;5241:6;5237:14;5230:58;5322:6;5317:2;5309:6;5305:15;5298:31;5113:223;:::o;5342:366::-;5484:3;5505:67;5569:2;5564:3;5505:67;:::i;:::-;5498:74;;5581:93;5670:3;5581:93;:::i;:::-;5699:2;5694:3;5690:12;5683:19;;5342:366;;;:::o;5714:419::-;5880:4;5918:2;5907:9;5903:18;5895:26;;5967:9;5961:4;5957:20;5953:1;5942:9;5938:17;5931:47;5995:131;6121:4;5995:131;:::i;:::-;5987:139;;5714:419;;;:::o;6139:122::-;6212:24;6230:5;6212:24;:::i;:::-;6205:5;6202:35;6192:63;;6251:1;6248;6241:12;6192:63;6139:122;:::o;6267:143::-;6324:5;6355:6;6349:13;6340:22;;6371:33;6398:5;6371:33;:::i;:::-;6267:143;;;;:::o;6416:351::-;6486:6;6535:2;6523:9;6514:7;6510:23;6506:32;6503:119;;;6541:79;;:::i;:::-;6503:119;6661:1;6686:64;6742:7;6733:6;6722:9;6718:22;6686:64;:::i;:::-;6676:74;;6632:128;6416:351;;;;:::o;6773:220::-;6913:34;6909:1;6901:6;6897:14;6890:58;6982:3;6977:2;6969:6;6965:15;6958:28;6773:220;:::o;6999:366::-;7141:3;7162:67;7226:2;7221:3;7162:67;:::i;:::-;7155:74;;7238:93;7327:3;7238:93;:::i;:::-;7356:2;7351:3;7347:12;7340:19;;6999:366;;;:::o;7371:419::-;7537:4;7575:2;7564:9;7560:18;7552:26;;7624:9;7618:4;7614:20;7610:1;7599:9;7595:17;7588:47;7652:131;7778:4;7652:131;:::i;:::-;7644:139;;7371:419;;;:::o;7796:171::-;7936:23;7932:1;7924:6;7920:14;7913:47;7796:171;:::o;7973:366::-;8115:3;8136:67;8200:2;8195:3;8136:67;:::i;:::-;8129:74;;8212:93;8301:3;8212:93;:::i;:::-;8330:2;8325:3;8321:12;8314:19;;7973:366;;;:::o;8345:419::-;8511:4;8549:2;8538:9;8534:18;8526:26;;8598:9;8592:4;8588:20;8584:1;8573:9;8569:17;8562:47;8626:131;8752:4;8626:131;:::i;:::-;8618:139;;8345:419;;;:::o;8770:332::-;8891:4;8929:2;8918:9;8914:18;8906:26;;8942:71;9010:1;8999:9;8995:17;8986:6;8942:71;:::i;:::-;9023:72;9091:2;9080:9;9076:18;9067:6;9023:72;:::i;:::-;8770:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "701400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "151",
								"deployer()": "2552",
								"getGreenTokenBalance()": "infinite",
								"greenToken()": "infinite",
								"owner()": "2505",
								"updateGreenTokenAddress(address)": "28102",
								"updateOwner(address)": "28124",
								"verifyAndWithdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 783,
									"end": 1155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 892,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 865,
									"end": 892,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 865,
									"end": 878,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 865,
									"end": 892,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 865,
									"end": 892,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 865,
									"end": 892,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 857,
									"end": 929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 857,
									"end": 929,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 857,
									"end": 929,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 978,
									"end": 979,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 980,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 980,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 948,
									"end": 966,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 948,
									"end": 980,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 980,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 948,
									"end": 980,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 1031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1065,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1065,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1097,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1084,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1076,
									"end": 1084,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1146,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 783,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1442,
									"end": 1453,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1474,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1464,
									"end": 1483,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1520,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1514,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1521,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1715,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1533,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "PUSH",
									"source": 9,
									"value": "4F776E65722063616E6E6F7420626520746865207A65726F2061646472657373"
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1667,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1671,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1650,
									"end": 1708,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 2087,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1721,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1884,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1948,
									"end": 1950,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1946,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1884,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1884,
									"end": 1951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1884,
									"end": 1951,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1884,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1877,
									"end": 1951,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1877,
									"end": 1951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2049,
									"end": 2052,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1960,
									"end": 2053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 2053,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1960,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2080,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2076,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2081,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2062,
									"end": 2081,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2062,
									"end": 2081,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 2087,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 2087,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 2087,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 2087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2512,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2259,
									"end": 2263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2299,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2286,
									"end": 2295,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2300,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2346,
									"end": 2355,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2340,
									"end": 2344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2336,
									"end": 2356,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2321,
									"end": 2330,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2334,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2310,
									"end": 2357,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2505,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2505,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2374,
									"end": 2505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2505,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2374,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2505,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2505,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2512,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2512,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2512,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2093,
									"end": 2512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2518,
									"end": 2751,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2518,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2658,
									"end": 2692,
									"name": "PUSH",
									"source": 9,
									"value": "477265656E20546F6B656E20616464726573732063616E6E6F74206265207468"
								},
								{
									"begin": 2654,
									"end": 2655,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2652,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2656,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2693,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2743,
									"name": "PUSH",
									"source": 9,
									"value": "65207A65726F2061646472657373000000000000000000000000000000000000"
								},
								{
									"begin": 2722,
									"end": 2724,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2714,
									"end": 2720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 2725,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2703,
									"end": 2744,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2518,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2518,
									"end": 2751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 3123,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2757,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2899,
									"end": 2902,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2920,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2984,
									"end": 2986,
									"name": "PUSH",
									"source": 9,
									"value": "2E"
								},
								{
									"begin": 2979,
									"end": 2982,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2920,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2920,
									"end": 2987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2920,
									"end": 2987,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2920,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2913,
									"end": 2987,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2913,
									"end": 2987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3085,
									"end": 3088,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2996,
									"end": 3089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3089,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2996,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3114,
									"end": 3116,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3109,
									"end": 3112,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3105,
									"end": 3117,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3117,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3117,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 3123,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 3123,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 3123,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 3123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3548,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3129,
									"end": 3548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3295,
									"end": 3299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3335,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3322,
									"end": 3331,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3318,
									"end": 3336,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3310,
									"end": 3336,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3310,
									"end": 3336,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3382,
									"end": 3391,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3380,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3372,
									"end": 3392,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3368,
									"end": 3369,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3357,
									"end": 3366,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3353,
									"end": 3370,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3393,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3541,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3536,
									"end": 3540,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3541,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3410,
									"end": 3541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3541,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3410,
									"end": 3541,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3541,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3548,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3548,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2157,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c02d03b12c5f3beb48621faac0b8472b5996bf528cd5abf1212ab6fce51371a264736f6c634300081a0033",
									".code": [
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "99E9C1DD"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "D5F39488"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "EA017105"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "2B32AF5"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "1F31DC01"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH",
											"source": 8,
											"value": "880CDC31"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2157,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 308,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 308,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1387,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1387,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1163,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 251,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 251,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1954,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1954,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 278,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 278,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1671,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 332,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 308,
											"end": 332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 575,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 557,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1476,
											"end": 1562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1476,
											"end": 1562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1641,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "55B6B6FE98D11600785423C3F7630DEE64B0F6FA54E8A25362AA522D83DFD243"
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1655,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 579,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 575,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 565,
											"end": 587,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 557,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 557,
											"end": 628,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1235,
											"end": 1306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1235,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1370,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4FFD725FC4A22075E9EC71C59EDF9C38CDEB588A91B24FC5B61388C5BE41282B"
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1371,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 251,
											"end": 271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2065,
											"end": 2069,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2036,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2036,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2036,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 278,
											"end": 301,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 278,
											"end": 301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1671,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 716,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 711,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 697,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 697,
											"end": 707,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 697,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 697,
											"end": 716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 689,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 689,
											"end": 754,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 689,
											"end": 754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1777,
											"end": 1781,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1748,
											"end": 1783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1748,
											"end": 1783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1748,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1813,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1794,
											"end": 1839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1794,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1883,
											"end": 1890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1852,
											"end": 1891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1928,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
										},
										{
											"begin": 1930,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1907,
											"end": 1938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1445,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1709,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1868,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2013,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 2083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2207,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2089,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2176,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2176,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2357,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2441,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2518,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2971,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 2992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3039,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3274,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3051,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3225,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79206465706C6F7965722063616E2063616C6C20746869732066756E63"
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "PUSH",
											"source": 9,
											"value": "74696F6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3646,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3280,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3502,
											"end": 3505,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3443,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3443,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3443,
											"end": 3510,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3443,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3519,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3612,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3519,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3646,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 4071,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3652,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4059,
											"end": 4063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3933,
											"end": 4064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 4064,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3933,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 4064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 4064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 4071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 4071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 4071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 4071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4077,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4251,
											"name": "PUSH",
											"source": 9,
											"value": "477265656E20546F6B656E20616464726573732063616E6E6F74206265207468"
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4286,
											"end": 4302,
											"name": "PUSH",
											"source": 9,
											"value": "65207A65726F2061646472657373000000000000000000000000000000000000"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4262,
											"end": 4303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4682,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4316,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 4538,
											"end": 4541,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4479,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4546,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4479,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4644,
											"end": 4647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4555,
											"end": 4648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4648,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4555,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4682,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 5107,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4688,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4869,
											"end": 4895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4869,
											"end": 4895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4951,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5095,
											"end": 5099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4969,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5100,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4969,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 5100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 5100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 5107,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 5107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 5107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 5107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5336,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5113,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577206F776E65722063616E6E6F7420626520746865207A65726F20616464"
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5237,
											"end": 5251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "PUSH",
											"source": 9,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5708,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 5342,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5569,
											"end": 5571,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5564,
											"end": 5567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5505,
											"end": 5572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5572,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5505,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5670,
											"end": 5673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5581,
											"end": 5674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5674,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5581,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5694,
											"end": 5697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 6133,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5714,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5880,
											"end": 5884,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5895,
											"end": 5921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5895,
											"end": 5921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5978,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 5995,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6126,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5995,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 6133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 6133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 6133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 6133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6261,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6139,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6212,
											"end": 6236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6236,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6212,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6237,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6192,
											"end": 6255,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6249,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6255,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6192,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6371,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6404,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 6371,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6533,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6538,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6622,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6503,
											"end": 6622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6541,
											"end": 6620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6622,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6503,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6742,
											"end": 6749,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6686,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6750,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6686,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6632,
											"end": 6760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6993,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6773,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6947,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 6909,
											"end": 6910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 6948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 6985,
											"name": "PUSH",
											"source": 9,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6977,
											"end": 6979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 6980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6999,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7141,
											"end": 7144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7226,
											"end": 7228,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 7221,
											"end": 7224,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7162,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7229,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7162,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7155,
											"end": 7229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7155,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 7238,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7331,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7238,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7790,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7371,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 7634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7610,
											"end": 7611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7608,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7778,
											"end": 7782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 7652,
											"end": 7783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7783,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7652,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7967,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7796,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7936,
											"end": 7959,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 7960,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 8339,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7973,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8200,
											"end": 8202,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 8136,
											"end": 8203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8203,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8136,
											"end": 8203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8129,
											"end": 8203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8129,
											"end": 8203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8212,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8305,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8212,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 8339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 8339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 8339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 8339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8764,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8345,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8511,
											"end": 8515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8538,
											"end": 8547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8588,
											"end": 8608,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8582,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8626,
											"end": 8757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8757,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8626,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8918,
											"end": 8927,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 9010,
											"end": 9011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8995,
											"end": 9012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 8992,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8942,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9013,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8942,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9023,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9091,
											"end": 9093,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9080,
											"end": 9089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9023,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 9023,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9023,
											"end": 9095,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9023,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ETHBangkok/SmartWallet/SmartWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deployer()": "d5f39488",
							"getGreenTokenBalance()": "99e9c1dd",
							"greenToken()": "02b32af5",
							"owner()": "8da5cb5b",
							"updateGreenTokenAddress(address)": "1f31dc01",
							"updateOwner(address)": "880cdc31",
							"verifyAndWithdraw()": "ea017105"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_greenTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGreenToken\",\"type\":\"address\"}],\"name\":\"GreenTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGreenTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greenToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGreenToken\",\"type\":\"address\"}],\"name\":\"updateGreenTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ETHBangkok/SmartWallet/SmartWallet.sol\":\"SmartWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"ETHBangkok/SmartWallet/SmartWallet.sol\":{\"keccak256\":\"0x2bece4e35c78bef56157b8d9a84b827643973dfe6787aa01cdeab2da34acf6fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bab8926138208bf746d675b6c6d70cd453cf4603630ed989b8699c51fc516ec\",\"dweb:/ipfs/Qmc4QcFj8mWR4xPVZFT6VNZ2cXKigkixcyppoGfCJGPriS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 881,
								"contract": "ETHBangkok/SmartWallet/SmartWallet.sol:SmartWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 883,
								"contract": "ETHBangkok/SmartWallet/SmartWallet.sol:SmartWallet",
								"label": "deployer",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 886,
								"contract": "ETHBangkok/SmartWallet/SmartWallet.sol:SmartWallet",
								"label": "greenToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)167"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)167": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							871
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 871,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 871,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								871,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							871
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 872,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 871,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 838,
							"src": "238:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 174,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "246:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 181,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "875:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:4"
									},
									"src": "844:46:4"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 190,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1028:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1054:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:4"
									},
									"src": "972:109:4"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1343:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1373:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 205,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1395:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1395:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 207,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1412:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "1416:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 203,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 201,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1353:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:4"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1293:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1293:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1293:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1307:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1319:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:4"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:4"
									},
									"scope": 578,
									"src": "1271:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1760:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1790:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 231,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "1812:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1812:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 233,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1833:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 234,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1839:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1843:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 229,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 227,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1770:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:4"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1696:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1696:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1696:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1710:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1724:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1736:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:4"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:4"
									},
									"scope": 578,
									"src": "1670:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "2600:139:4",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 271,
														"src": "2610:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 258,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$578",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$578",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2664:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 254,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2633:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2633:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2695:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 265,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2702:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 266,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "2711:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 267,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "2726:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2682:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:4"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2545:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2545:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2545:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2559:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2576:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:4"
									},
									"scope": 578,
									"src": "2514:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3505:370:4",
										"statements": [
											{
												"id": 313,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:4",
												"statements": [
													{
														"assignments": [
															284
														],
														"declarations": [
															{
																"constant": false,
																"id": 284,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 313,
																"src": "3539:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 293,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 289,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$578",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$578",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 287,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 291,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "3597:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 285,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3566:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "3566:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "3623:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 295,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "3642:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 304,
														"nodeType": "IfStatement",
														"src": "3619:160:4",
														"trueBody": {
															"id": 303,
															"nodeType": "Block",
															"src": "3661:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 298,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3719:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 299,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 284,
																				"src": "3728:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 300,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 280,
																				"src": "3746:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 297,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3686:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 302,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 306,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3805:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 307,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "3812:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 308,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "3821:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 309,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "3840:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 305,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "3792:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 312,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3438:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 274,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3438:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3438:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3452:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3469:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:4"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:4"
									},
									"scope": 578,
									"src": "3407:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4529:303:4",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "4539:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 330,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4582:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "4582:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 332,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4598:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "4607:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 328,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:4"
											},
											{
												"condition": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 338,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4654:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 339,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4661:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 337,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "4630:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "4625:201:4",
												"trueBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "4676:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 343,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "4710:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 346,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "4732:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "4732:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 348,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 321,
																						"src": "4748:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 349,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 350,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 344,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 342,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4690:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 353,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "4795:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 356,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "4802:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 354,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4775:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 358,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4474:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 317,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4474:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4474:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4488:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4505:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:4"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:4"
									},
									"scope": 578,
									"src": "4452:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "5279:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 375,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "5293:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5402:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "5406:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 391,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5413:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 387,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5380:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5380:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 402,
													"nodeType": "IfStatement",
													"src": "5375:117:4",
													"trueBody": {
														"id": 401,
														"nodeType": "Block",
														"src": "5420:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 366,
																					"src": "5474:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 395,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 394,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "5441:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 400,
																"nodeType": "RevertStatement",
																"src": "5434:47:4"
															}
														]
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "5289:203:4",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "5314:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 381,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5341:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 382,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "5348:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 383,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "5352:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 380,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "5328:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5208:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5208:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5208:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5224:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5236:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5251:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:4"
									},
									"scope": 578,
									"src": "5176:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "6017:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 420,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "6031:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6154:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6160:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6164:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 438,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6171:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6128:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6128:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 449,
													"nodeType": "IfStatement",
													"src": "6123:127:4",
													"trueBody": {
														"id": 448,
														"nodeType": "Block",
														"src": "6178:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 444,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6232:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 442,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 441,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "6199:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 447,
																"nodeType": "RevertStatement",
																"src": "6192:47:4"
															}
														]
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6027:223:4",
												"trueBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "6052:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 426,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6083:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 427,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6090:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 428,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "6096:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 429,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "6100:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 425,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "6066:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5895:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 408,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 407,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5895:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5895:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5919:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5941:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5984:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:4"
									},
									"scope": 578,
									"src": "5850:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "7023:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 465,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "7037:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "7145:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "7149:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 481,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "7156:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 477,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "7124:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7124:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 492,
													"nodeType": "IfStatement",
													"src": "7119:116:4",
													"trueBody": {
														"id": 491,
														"nodeType": "Block",
														"src": "7163:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 487,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 456,
																					"src": "7217:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 485,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 484,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "7184:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 490,
																"nodeType": "RevertStatement",
																"src": "7177:47:4"
															}
														]
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "7033:202:4",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "7058:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 471,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7085:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 472,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "7092:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "7096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 470,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7072:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6952:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6952:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6952:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6968:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6980:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6995:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:4"
									},
									"scope": 578,
									"src": "6921:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7808:650:4",
										"statements": [
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "7818:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:4"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "7846:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:4"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:4",
													"nodeType": "YulBlock",
													"src": "7900:396:4",
													"statements": [
														{
															"nativeSrc": "7914:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:4"
																		},
																		"nativeSrc": "7934:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:4",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:4"
																		},
																		"nativeSrc": "7951:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:4"
																		},
																		"nativeSrc": "7968:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:4"
																},
																"nativeSrc": "7929:60:4",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:4",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:4",
																"nodeType": "YulBlock",
																"src": "8050:157:4",
																"statements": [
																	{
																		"nativeSrc": "8068:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:4"
																			},
																			"nativeSrc": "8079:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:4"
																					},
																					"nativeSrc": "8130:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:4"
																			},
																			"nativeSrc": "8107:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:4"
																		},
																		"nativeSrc": "8107:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:4"
																					},
																					"nativeSrc": "8176:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:4"
																			},
																			"nativeSrc": "8164:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:4"
																		},
																		"nativeSrc": "8164:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:4"
																},
																"nativeSrc": "8034:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:4"
															},
															"nativeSrc": "8031:176:4",
															"nodeType": "YulIf",
															"src": "8031:176:4"
														},
														{
															"nativeSrc": "8220:30:4",
															"nodeType": "YulAssignment",
															"src": "8220:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:4"
																},
																"nativeSrc": "8234:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:4"
																}
															]
														},
														{
															"nativeSrc": "8263:23:4",
															"nodeType": "YulAssignment",
															"src": "8263:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:4"
																},
																"nativeSrc": "8278:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 501,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:4",
														"valueSize": 1
													},
													{
														"declaration": 501,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:4",
														"valueSize": 1
													},
													{
														"declaration": 505,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:4",
														"valueSize": 1
													},
													{
														"declaration": 508,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:4",
														"valueSize": 1
													},
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 510,
												"nodeType": "InlineAssembly",
												"src": "7875:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8310:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 522,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "8362:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 516,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "8336:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "8306:146:4",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "8380:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 529,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "8434:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 527,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 526,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "8401:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 532,
															"nodeType": "RevertStatement",
															"src": "8394:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 497,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "7767:6:4"
													},
													"referencedDeclaration": 167,
													"src": "7767:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7781:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:4"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:4"
									},
									"scope": 578,
									"src": "7738:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "9049:391:4",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9059:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9081:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:4"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9109:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:4",
													"nodeType": "YulBlock",
													"src": "9163:174:4",
													"statements": [
														{
															"nativeSrc": "9177:71:4",
															"nodeType": "YulAssignment",
															"src": "9177:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:4"
																		},
																		"nativeSrc": "9193:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:4"
																		},
																		"nativeSrc": "9210:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:4"
																		},
																		"nativeSrc": "9227:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:4"
																},
																"nativeSrc": "9188:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:4"
																}
															]
														},
														{
															"nativeSrc": "9261:30:4",
															"nodeType": "YulAssignment",
															"src": "9261:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:4"
																},
																"nativeSrc": "9275:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:4"
																}
															]
														},
														{
															"nativeSrc": "9304:23:4",
															"nodeType": "YulAssignment",
															"src": "9304:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:4"
																},
																"nativeSrc": "9319:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 542,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:4",
														"valueSize": 1
													},
													{
														"declaration": 542,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:4",
														"valueSize": 1
													},
													{
														"declaration": 551,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:4",
														"valueSize": 1
													},
													{
														"declaration": 548,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:4",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 556,
												"nodeType": "InlineAssembly",
												"src": "9138:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "9353:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 558,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "9365:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 569,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "9416:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 563,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "9391:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 561,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 573,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 546,
												"id": 575,
												"nodeType": "Return",
												"src": "9346:87:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "8993:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 538,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8993:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8993:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "9007:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "9043:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:4"
									},
									"scope": 578,
									"src": "8960:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 579,
							"src": "750:8692:4",
							"usedErrors": [
								181,
								190
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"Errors": [
							859
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 838,
							"sourceUnit": 860,
							"src": "127:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 581,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 859,
										"src": "135:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "Address",
							"nameLocation": "241:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 588,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:5"
									},
									"src": "335:39:5"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1361:278:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																],
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 601,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1399:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "IfStatement",
												"src": "1371:125:5",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "1407:89:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 608,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 611,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "1478:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 603,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1428:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "1428:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 613,
															"nodeType": "RevertStatement",
															"src": "1421:64:5"
														}
													]
												}
											},
											{
												"assignments": [
													617,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "1507:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 616,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 618,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1525:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 620,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1547:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:5"
											},
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:5",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "1573:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "1568:65:5",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "1582:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 627,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1603:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 850,
																	"src": "1603:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "1596:26:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1309:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:5"
									},
									"scope": 837,
									"src": "1290:349:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "2573:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2612:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "2620:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 645,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2590:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 644,
												"id": 650,
												"nodeType": "Return",
												"src": "2583:45:5"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2506:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2522:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:5"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:5"
									},
									"scope": 837,
									"src": "2484:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3072:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 666,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 669,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3110:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "3082:123:5",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "3117:88:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 676,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				],
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 674,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 679,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "3188:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 671,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "3138:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "3138:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 681,
															"nodeType": "RevertStatement",
															"src": "3131:63:5"
														}
													]
												}
											},
											{
												"assignments": [
													685,
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "3215:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 684,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "3229:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 686,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"arguments": [
														{
															"id": 692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3282:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 688,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "3256:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 690,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "3275:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3339:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 698,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3348:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 695,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3304:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 663,
												"id": 700,
												"nodeType": "Return",
												"src": "3297:62:5"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2990:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3006:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3025:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:5"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3058:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:5"
									},
									"scope": 837,
									"src": "2959:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "3605:154:5",
										"statements": [
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3616:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3630:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3675:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 716,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3657:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3724:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "3732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 724,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3741:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 721,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3697:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 726,
												"nodeType": "Return",
												"src": "3690:62:5"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3533:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3549:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:5"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3591:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:5"
									},
									"scope": 837,
									"src": "3505:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "3997:156:5",
										"statements": [
											{
												"assignments": [
													739,
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4008:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 738,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4022:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 740,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4069:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 742,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4049:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4118:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4126:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 750,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "4135:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4091:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 737,
												"id": 752,
												"nodeType": "Return",
												"src": "4084:62:5"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3930:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3946:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:5"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3983:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:5"
									},
									"scope": 837,
									"src": "3900:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "4579:424:5",
										"statements": [
											{
												"condition": {
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:5",
													"subExpression": {
														"id": 766,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "4594:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "4653:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 773,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 761,
																			"src": "4841:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 777,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "4867:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 788,
															"nodeType": "IfStatement",
															"src": "4837:119:5",
															"trueBody": {
																"id": 787,
																"nodeType": "Block",
																"src": "4892:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 784,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "4934:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 783,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "4917:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 786,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 789,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4976:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 765,
															"id": 790,
															"nodeType": "Return",
															"src": "4969:17:5"
														}
													]
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "4589:408:5",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "4603:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 769,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4625:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 768,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "4617:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4466:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4490:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4512:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4565:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:5"
									},
									"scope": 837,
									"src": "4421:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "5307:122:5",
										"statements": [
											{
												"condition": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:5",
													"subExpression": {
														"id": 804,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "5322:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "5381:42:5",
													"statements": [
														{
															"expression": {
																"id": 811,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "5402:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 803,
															"id": 812,
															"nodeType": "Return",
															"src": "5395:17:5"
														}
													]
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "5317:106:5",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "5331:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5353:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 806,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "5345:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5231:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5245:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5293:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:5"
									},
									"scope": 837,
									"src": "5205:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "5598:432:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 822,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5674:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "5973:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 828,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "5994:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 850,
																	"src": "5994:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "5987:26:5"
														}
													]
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "5670:354:5",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "5697:270:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:5",
																"nodeType": "YulBlock",
																"src": "5824:133:5",
																"statements": [
																	{
																		"nativeSrc": "5842:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:5"
																			},
																			"nativeSrc": "5865:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:5",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:5"
																					},
																					"nativeSrc": "5906:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:5"
																			},
																			"nativeSrc": "5899:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:5"
																		},
																		"nativeSrc": "5899:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:5"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 819,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 819,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:5",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 826,
															"nodeType": "InlineAssembly",
															"src": "5799:158:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "5560:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:5"
									},
									"scope": 837,
									"src": "5543:487:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 838,
							"src": "233:5799:5",
							"usedErrors": [
								588
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 840,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:6",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859
							],
							"name": "Errors",
							"nameLocation": "419:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 847,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "557:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "574:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:6"
									},
									"src": "531:59:6"
								},
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 850,
									"name": "FailedCall",
									"nameLocation": "696:10:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:6"
									},
									"src": "690:19:6"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:6",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 853,
									"name": "FailedDeployment",
									"nameLocation": "772:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"src": "766:25:6"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:6",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 858,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "884:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:6"
									},
									"src": "860:33:6"
								}
							],
							"scope": 860,
							"src": "411:484:6",
							"usedErrors": [
								847,
								850,
								853,
								858
							],
							"usedEvents": []
						}
					],
					"src": "100:796:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							871
						]
					},
					"id": 872,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 862,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 871,
							"linearizedBaseContracts": [
								871
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 864,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 871,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 872,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"ETHBangkok/SmartWallet/SmartWallet.sol": {
				"ast": {
					"absolutePath": "ETHBangkok/SmartWallet/SmartWallet.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							578
						],
						"SmartWallet": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 873,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 168,
							"src": "61:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 875,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 579,
							"src": "119:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SmartWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "SmartWallet",
							"nameLocation": "197:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 879,
									"libraryName": {
										"id": 876,
										"name": "SafeERC20",
										"nameLocations": [
											"222:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "222:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "216:27:8",
									"typeName": {
										"id": 878,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 877,
											"name": "IERC20",
											"nameLocations": [
												"236:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "236:6:8"
										},
										"referencedDeclaration": 167,
										"src": "236:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 881,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "266:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "251:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 880,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5f39488",
									"id": 883,
									"mutability": "mutable",
									"name": "deployer",
									"nameLocation": "293:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "278:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 882,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02b32af5",
									"id": 886,
									"mutability": "mutable",
									"name": "greenToken",
									"nameLocation": "322:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "308:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$167",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 885,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 884,
											"name": "IERC20",
											"nameLocations": [
												"308:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "308:6:8"
										},
										"referencedDeclaration": 167,
										"src": "308:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b",
									"id": 890,
									"name": "OwnerUpdated",
									"nameLocation": "347:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "376:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "360:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:26:8"
									},
									"src": "341:45:8"
								},
								{
									"anonymous": false,
									"eventSelector": "55b6b6fe98d11600785423c3f7630dee64b0f6fa54e8a25362aa522d83dfd243",
									"id": 894,
									"name": "GreenTokenUpdated",
									"nameLocation": "398:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGreenToken",
												"nameLocation": "432:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "416:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:31:8"
									},
									"src": "392:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b",
									"id": 900,
									"name": "TokensWithdrawn",
									"nameLocation": "459:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "491:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "475:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "506:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "498:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:39:8"
									},
									"src": "453:61:8"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "546:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 903,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "565:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "569:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "565:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 905,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "579:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "565:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206465706c6f7965722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "589:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8",
																"typeString": "literal_string \"Only deployer can call this function\""
															},
															"value": "Only deployer can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b31f55919706e02fd89af3d9eb4bb71a07312bafea3213b21874af7ffdca16c8",
																"typeString": "literal_string \"Only deployer can call this function\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "557:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "557:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "557:71:8"
											},
											{
												"id": 910,
												"nodeType": "PlaceholderStatement",
												"src": "639:1:8"
											}
										]
									},
									"id": 912,
									"name": "onlyDeployer",
									"nameLocation": "531:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:8"
									},
									"src": "522:127:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "678:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 915,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "697:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "701:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "697:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 917,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "711:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "697:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "718:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "689:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "689:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "689:65:8"
											},
											{
												"id": 922,
												"nodeType": "PlaceholderStatement",
												"src": "765:1:8"
											}
										]
									},
									"id": 924,
									"name": "onlyOwner",
									"nameLocation": "666:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"src": "657:118:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "846:309:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "_initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "865:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "890:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 933,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "882:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "882:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "865:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850",
																"typeString": "literal_string \"Owner cannot be the zero address\""
															},
															"value": "Owner cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d438786316f732db45618f3f06ee20451be75988d043c1d7ec3a33f00058850",
																"typeString": "literal_string \"Owner cannot be the zero address\""
															}
														],
														"id": 931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "857:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "857:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "_greenTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "948:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "978:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "970:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "970:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "970:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "948:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "477265656e20546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "982:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																"typeString": "literal_string \"Green Token address cannot be the zero address\""
															},
															"value": "Green Token address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																"typeString": "literal_string \"Green Token address cannot be the zero address\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "940:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "940:91:8"
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 951,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1044:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 952,
														"name": "_initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "1052:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1044:21:8"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1076:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 956,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1087:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1091:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1087:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1076:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1076:21:8"
											},
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 960,
														"name": "greenToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "1108:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 962,
																"name": "_greenTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1128:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 961,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1121:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1121:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"src": "1108:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1108:39:8"
											}
										]
									},
									"id": 967,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "803:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "795:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_greenTokenAddress",
												"nameLocation": "826:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "818:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:51:8"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:8"
									},
									"scope": 1079,
									"src": "783:372:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1224:155:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 975,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "1243:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1263:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1255:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 976,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1255:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1255:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1243:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206f776e65722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422",
																"typeString": "literal_string \"New owner cannot be the zero address\""
															},
															"value": "New owner cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa71ef4c1fdf1e34de72d05db09cce7beb630160c908930ad641e3534e5b4422",
																"typeString": "literal_string \"New owner cannot be the zero address\""
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1235:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1235:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "1235:71:8"
											},
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1317:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 985,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1325:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1317:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1317:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 989,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1362:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 988,
														"name": "OwnerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "1349:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "EmitStatement",
												"src": "1344:27:8"
											}
										]
									},
									"functionSelector": "880cdc31",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 971,
												"name": "onlyDeployer",
												"nameLocations": [
													"1211:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 912,
												"src": "1211:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1211:12:8"
										}
									],
									"name": "updateOwner",
									"nameLocation": "1172:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1192:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1184:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:18:8"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1224:0:8"
									},
									"scope": 1079,
									"src": "1163:216:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1465:198:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "newGreenToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "1484:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1509:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1501:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1002,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1501:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1501:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1484:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "477265656e20546f6b656e20616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1513:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																"typeString": "literal_string \"Green Token address cannot be the zero address\""
															},
															"value": "Green Token address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c00112362b6e286194982db90f0fb2b10aed6f0d4d1d641dfa4ed20c6282833",
																"typeString": "literal_string \"Green Token address cannot be the zero address\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1476:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1476:86:8"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "greenToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "1573:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1012,
																"name": "newGreenToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "1593:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1011,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1586:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1586:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"src": "1573:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1573:34:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1017,
															"name": "newGreenToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "1641:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1016,
														"name": "GreenTokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1623:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "EmitStatement",
												"src": "1618:37:8"
											}
										]
									},
									"functionSelector": "1f31dc01",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "onlyDeployer",
												"nameLocations": [
													"1452:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 912,
												"src": "1452:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1452:12:8"
										}
									],
									"name": "updateGreenTokenAddress",
									"nameLocation": "1396:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "newGreenToken",
												"nameLocation": "1428:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1420:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:23:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:8"
									},
									"scope": 1079,
									"src": "1387:276:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "1719:227:8",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1738:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "1730:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1730:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1032,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1777:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmartWallet_$1079",
																		"typeString": "contract SmartWallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmartWallet_$1079",
																		"typeString": "contract SmartWallet"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1769:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1769:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1769:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1028,
															"name": "greenToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1748:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "1748:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1730:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "1802:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1802:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1815:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1794:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1794:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1876:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "1883:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1043,
															"name": "greenToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1852:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1863:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "1852:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1852:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1051,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1923:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "1930:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "1907:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "EmitStatement",
												"src": "1902:36:8"
											}
										]
									},
									"functionSelector": "ea017105",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyOwner",
												"nameLocations": [
													"1709:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 924,
												"src": "1709:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1709:9:8"
										}
									],
									"name": "verifyAndWithdraw",
									"nameLocation": "1680:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:2:8"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:0:8"
									},
									"scope": 1079,
									"src": "1671:275:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2018:61:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1065,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2065:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmartWallet_$1079",
																		"typeString": "contract SmartWallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmartWallet_$1079",
																		"typeString": "contract SmartWallet"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2057:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2057:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2057:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1061,
															"name": "greenToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "2036:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2047:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "2036:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1068,
												"nodeType": "Return",
												"src": "2029:42:8"
											}
										]
									},
									"functionSelector": "99e9c1dd",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGreenTokenBalance",
									"nameLocation": "1963:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:8"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2009:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:8"
									},
									"scope": 1079,
									"src": "1954:125:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2114:2:8",
										"statements": []
									},
									"id": 1074,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:2:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2114:0:8"
									},
									"scope": 1079,
									"src": "2087:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "2152:2:8",
										"statements": []
									},
									"id": 1078,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:2:8"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2152:0:8"
									},
									"scope": 1079,
									"src": "2124:30:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1080,
							"src": "188:1969:8",
							"usedErrors": [
								181
							],
							"usedEvents": [
								890,
								894,
								900
							]
						}
					],
					"src": "33:2126:8"
				},
				"id": 8
			}
		}
	}
}